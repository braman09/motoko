<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="214" onload="init(evt)" viewBox="0 0 1200 214" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="214.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >reversi.mo</text>
<text id="details" x="10.00" y="197" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="197" > </text>
<g id="frames">
<g >
<title>leb128_decode (128 samples, 0.02%)</title><rect x="1182.1" y="101" width="0.2" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="1185.13" y="111.5" ></text>
</g>
<g >
<title>bigint_sleb128_decode_word64 (459 samples, 0.06%)</title><rect x="1140.4" y="101" width="0.8" height="15.0" fill="rgb(237,113,36)" rx="2" ry="2" />
<text  x="1143.44" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (216 samples, 0.03%)</title><rect x="1166.8" y="101" width="0.3" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="1169.80" y="111.5" ></text>
</g>
<g >
<title>B_add (2,900 samples, 0.39%)</title><rect x="524.9" y="85" width="4.6" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="527.92" y="95.5" ></text>
</g>
<g >
<title>Array.idx_bigint (3,266 samples, 0.44%)</title><rect x="539.4" y="69" width="5.2" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="542.41" y="79.5" ></text>
</g>
<g >
<title>compacting_gc (4,492 samples, 0.60%)</title><rect x="1182.8" y="133" width="7.1" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="1185.82" y="143.5" ></text>
</g>
<g >
<title>B_ge (160 samples, 0.02%)</title><rect x="328.3" y="69" width="0.3" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="331.31" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::types::block_size::h3f6b24f4d5b088b5 (384 samples, 0.05%)</title><rect x="1167.1" y="101" width="0.7" height="15.0" fill="rgb(233,127,31)" rx="2" ry="2" />
<text  x="1170.14" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (108 samples, 0.01%)</title><rect x="1145.6" y="117" width="0.2" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="1148.65" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (288 samples, 0.04%)</title><rect x="271.0" y="101" width="0.5" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="274.02" y="111.5" ></text>
</g>
<g >
<title>@deserialize&lt;&gt; (513 samples, 0.07%)</title><rect x="1181.6" y="133" width="0.8" height="15.0" fill="rgb(242,176,41)" rx="2" ry="2" />
<text  x="1184.58" y="143.5" ></text>
</g>
<g >
<title>Array.idx_bigint (92 samples, 0.01%)</title><rect x="325.6" y="85" width="0.2" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="328.63" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (9,120 samples, 1.22%)</title><rect x="1013.1" y="69" width="14.5" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="1016.12" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hbbbd9772b42fa36f (666 samples, 0.09%)</title><rect x="1165.2" y="101" width="1.0" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="1168.18" y="111.5" ></text>
</g>
<g >
<title>next (18,648 samples, 2.50%)</title><rect x="152.1" y="101" width="29.6" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="155.13" y="111.5" >next</text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::h0d0130e4434da608 (120 samples, 0.02%)</title><rect x="280.0" y="101" width="0.2" height="15.0" fill="rgb(235,127,34)" rx="2" ry="2" />
<text  x="283.00" y="111.5" ></text>
</g>
<g >
<title>can_tag_i64 (3,976 samples, 0.53%)</title><rect x="115.1" y="85" width="6.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="118.07" y="95.5" ></text>
</g>
<g >
<title>next (3,990 samples, 0.54%)</title><rect x="292.0" y="101" width="6.3" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="294.96" y="111.5" ></text>
</g>
<g >
<title>compacting_gc (13,758 samples, 1.85%)</title><rect x="1146.0" y="133" width="21.8" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="1148.97" y="143.5" >c..</text>
</g>
<g >
<title>alloc_words (702 samples, 0.09%)</title><rect x="1137.1" y="69" width="1.1" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="1140.13" y="79.5" ></text>
</g>
<g >
<title>alloc_size&lt;4&gt;_tag&lt;1&gt; (864 samples, 0.12%)</title><rect x="1135.5" y="85" width="1.4" height="15.0" fill="rgb(246,128,45)" rx="2" ry="2" />
<text  x="1138.50" y="95.5" ></text>
</g>
<g >
<title>B_eq (275 samples, 0.04%)</title><rect x="304.8" y="101" width="0.4" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="307.79" y="111.5" ></text>
</g>
<g >
<title>B_lt (160 samples, 0.02%)</title><rect x="328.6" y="69" width="0.2" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="331.57" y="79.5" ></text>
</g>
<g >
<title>alloc_blob (228 samples, 0.03%)</title><rect x="302.0" y="85" width="0.4" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="305.04" y="95.5" ></text>
</g>
<g >
<title>opponent (108 samples, 0.01%)</title><rect x="305.2" y="117" width="0.2" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="308.22" y="127.5" ></text>
</g>
<g >
<title>@serialize_go&lt;t&gt; (29,900 samples, 4.01%)</title><rect x="10.9" y="85" width="47.4" height="15.0" fill="rgb(244,156,43)" rx="2" ry="2" />
<text  x="13.94" y="95.5" >@ser..</text>
</g>
<g >
<title>B_mul (216 samples, 0.03%)</title><rect x="328.8" y="69" width="0.4" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="331.82" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::h0d0130e4434da608 (480 samples, 0.06%)</title><rect x="270.3" y="101" width="0.7" height="15.0" fill="rgb(235,127,34)" rx="2" ry="2" />
<text  x="273.26" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::hfd4ff3b88fbfd4c0 (5,033 samples, 0.68%)</title><rect x="272.5" y="117" width="8.0" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="275.54" y="127.5" ></text>
</g>
<g >
<title>B_gt (650 samples, 0.09%)</title><rect x="296.8" y="85" width="1.1" height="15.0" fill="rgb(232,124,30)" rx="2" ry="2" />
<text  x="299.84" y="95.5" ></text>
</g>
<g >
<title>Array.idx (1,704 samples, 0.23%)</title><rect x="541.9" y="53" width="2.7" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="544.88" y="63.5" ></text>
</g>
<g >
<title>B_add (1,800 samples, 0.24%)</title><rect x="319.2" y="85" width="2.8" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="322.18" y="95.5" ></text>
</g>
<g >
<title>Array.idx (96 samples, 0.01%)</title><rect x="327.1" y="53" width="0.2" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="330.12" y="63.5" ></text>
</g>
<g >
<title>memcpy (3,052 samples, 0.41%)</title><rect x="231.8" y="85" width="4.9" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="234.83" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (1,672 samples, 0.22%)</title><rect x="512.0" y="85" width="2.7" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="515.02" y="95.5" ></text>
</g>
<g >
<title>B_sub (256 samples, 0.03%)</title><rect x="329.2" y="69" width="0.4" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="332.21" y="79.5" ></text>
</g>
<g >
<title>B_mul (648 samples, 0.09%)</title><rect x="323.9" y="85" width="1.0" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="326.88" y="95.5" ></text>
</g>
<g >
<title>text_to_buf (19,392 samples, 2.60%)</title><rect x="27.6" y="53" width="30.7" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="30.57" y="63.5" >te..</text>
</g>
<g >
<title>init (8,580 samples, 1.15%)</title><rect x="1168.0" y="117" width="13.6" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="1170.99" y="127.5" ></text>
</g>
<g >
<title>opt_inject (1,152 samples, 0.15%)</title><rect x="179.8" y="85" width="1.9" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="182.83" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (512 samples, 0.07%)</title><rect x="296.0" y="69" width="0.8" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="299.03" y="79.5" ></text>
</g>
<g >
<title>memcpy (552 samples, 0.07%)</title><rect x="278.7" y="101" width="0.9" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="281.69" y="111.5" ></text>
</g>
<g >
<title>@deserialize_go&lt;I&gt; (900 samples, 0.12%)</title><rect x="1139.7" y="117" width="1.5" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1142.74" y="127.5" ></text>
</g>
<g >
<title>range (4,824 samples, 0.65%)</title><rect x="184.4" y="101" width="7.7" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="187.45" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (72 samples, 0.01%)</title><rect x="1189.6" y="101" width="0.1" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="1192.62" y="111.5" ></text>
</g>
<g >
<title>B_lt (26,880 samples, 3.61%)</title><rect x="936.3" y="85" width="42.5" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="939.26" y="95.5" >B_lt</text>
</g>
<g >
<title>can_tag_i64 (928 samples, 0.12%)</title><rect x="528.0" y="69" width="1.5" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="531.05" y="79.5" ></text>
</g>
<g >
<title>alloc_size&lt;5&gt;_tag&lt;11&gt; (1,152 samples, 0.15%)</title><rect x="190.3" y="85" width="1.8" height="15.0" fill="rgb(245,128,44)" rx="2" ry="2" />
<text  x="193.26" y="95.5" ></text>
</g>
<g >
<title>nat_sub (9,912 samples, 1.33%)</title><rect x="1115.4" y="69" width="15.7" height="15.0" fill="rgb(228,158,25)" rx="2" ry="2" />
<text  x="1118.45" y="79.5" ></text>
</g>
<g >
<title>init (8,580 samples, 1.15%)</title><rect x="285.3" y="117" width="13.6" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="288.34" y="127.5" ></text>
</g>
<g >
<title>B_mul (81 samples, 0.01%)</title><rect x="308.1" y="101" width="0.2" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="311.14" y="111.5" ></text>
</g>
<g >
<title>leb128_decode (512 samples, 0.07%)</title><rect x="241.0" y="101" width="0.9" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="244.04" y="111.5" ></text>
</g>
<g >
<title>B_eq (1,060 samples, 0.14%)</title><rect x="561.4" y="69" width="1.7" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="564.44" y="79.5" ></text>
</g>
<g >
<title>$lambda (1,161 samples, 0.16%)</title><rect x="300.9" y="117" width="1.9" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="303.92" y="127.5" ></text>
</g>
<g >
<title>idl_sub_buf_init (76 samples, 0.01%)</title><rect x="239.8" y="117" width="0.1" height="15.0" fill="rgb(236,184,34)" rx="2" ry="2" />
<text  x="242.78" y="127.5" ></text>
</g>
<g >
<title>Array.idx_bigint (1,564 samples, 0.21%)</title><rect x="1171.5" y="101" width="2.4" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="1174.47" y="111.5" ></text>
</g>
<g >
<title>Array.idx (5,964 samples, 0.80%)</title><rect x="92.2" y="85" width="9.5" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="95.25" y="95.5" ></text>
</g>
<g >
<title>@deserialize&lt;III&gt; (4,650 samples, 0.62%)</title><rect x="1138.2" y="133" width="7.4" height="15.0" fill="rgb(243,176,41)" rx="2" ry="2" />
<text  x="1141.24" y="143.5" ></text>
</g>
<g >
<title>opponent (3,600 samples, 0.48%)</title><rect x="578.2" y="85" width="5.7" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="581.18" y="95.5" ></text>
</g>
<g >
<title>exists (280,218 samples, 37.60%)</title><rect x="583.9" y="101" width="443.7" height="15.0" fill="rgb(234,142,32)" rx="2" ry="2" />
<text  x="586.88" y="111.5" >exists</text>
</g>
<g >
<title>parse_idl_header (1,713 samples, 0.23%)</title><rect x="1141.6" y="117" width="2.7" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="1144.60" y="127.5" ></text>
</g>
<g >
<title>__wasm_apply_data_relocs (665 samples, 0.09%)</title><rect x="299.0" y="117" width="1.1" height="15.0" fill="rgb(244,119,43)" rx="2" ry="2" />
<text  x="302.01" y="127.5" ></text>
</g>
<g >
<title>compacting_gc (18,896 samples, 2.54%)</title><rect x="242.4" y="133" width="29.9" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="245.37" y="143.5" >co..</text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (144 samples, 0.02%)</title><rect x="241.9" y="101" width="0.2" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="244.85" y="111.5" ></text>
</g>
<g >
<title>B_mul (13,419 samples, 1.80%)</title><rect x="129.1" y="101" width="21.2" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="132.06" y="111.5" >B..</text>
</g>
<g >
<title>can_tag_i64 (11,328 samples, 1.52%)</title><rect x="1097.5" y="69" width="17.9" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="1100.51" y="79.5" ></text>
</g>
<g >
<title>alloc_size&lt;6&gt;_tag&lt;11&gt; (96 samples, 0.01%)</title><rect x="1145.8" y="133" width="0.2" height="15.0" fill="rgb(245,128,44)" rx="2" ry="2" />
<text  x="1148.82" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_array::h717e7276f702fa10 (135 samples, 0.02%)</title><rect x="467.7" y="69" width="0.2" height="15.0" fill="rgb(234,127,32)" rx="2" ry="2" />
<text  x="470.70" y="79.5" ></text>
</g>
<g >
<title>B_ge (480 samples, 0.06%)</title><rect x="322.4" y="85" width="0.7" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="325.36" y="95.5" ></text>
</g>
<g >
<title>opt_inject (864 samples, 0.12%)</title><rect x="1048.3" y="85" width="1.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="1051.33" y="95.5" ></text>
</g>
<g >
<title>Array.idx_bigint (414 samples, 0.06%)</title><rect x="311.0" y="69" width="0.7" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="314.04" y="79.5" ></text>
</g>
<g >
<title>B_sub (160 samples, 0.02%)</title><rect x="291.7" y="101" width="0.3" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="294.71" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::types::block_size::h3f6b24f4d5b088b5 (128 samples, 0.02%)</title><rect x="1189.7" y="101" width="0.2" height="15.0" fill="rgb(233,127,31)" rx="2" ry="2" />
<text  x="1192.73" y="111.5" ></text>
</g>
<g >
<title>alloc_size&lt;2&gt;_tag&lt;9&gt; (1,152 samples, 0.15%)</title><rect x="186.6" y="85" width="1.8" height="15.0" fill="rgb(249,128,48)" rx="2" ry="2" />
<text  x="189.61" y="95.5" ></text>
</g>
<g >
<title>render (113,430 samples, 15.22%)</title><rect x="59.2" y="117" width="179.6" height="15.0" fill="rgb(243,181,41)" rx="2" ry="2" />
<text  x="62.23" y="127.5" >render</text>
</g>
<g >
<title>$lambda (8,587 samples, 1.15%)</title><rect x="1168.0" y="133" width="13.6" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="1170.98" y="143.5" ></text>
</g>
<g >
<title>eventually (5,284 samples, 0.71%)</title><rect x="308.3" y="101" width="8.3" height="15.0" fill="rgb(243,165,42)" rx="2" ry="2" />
<text  x="311.26" y="111.5" ></text>
</g>
<g >
<title>flip (2,976 samples, 0.40%)</title><rect x="324.9" y="101" width="4.7" height="15.0" fill="rgb(244,139,43)" rx="2" ry="2" />
<text  x="327.90" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::text::alloc_text_blob::h4ab15865a564676e (1,372 samples, 0.18%)</title><rect x="236.7" y="85" width="2.1" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="239.66" y="95.5" ></text>
</g>
<g >
<title>memcpy (240 samples, 0.03%)</title><rect x="27.2" y="53" width="0.4" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="30.19" y="63.5" ></text>
</g>
<g >
<title>nat_sub (252 samples, 0.03%)</title><rect x="151.7" y="85" width="0.4" height="15.0" fill="rgb(228,158,25)" rx="2" ry="2" />
<text  x="154.73" y="95.5" ></text>
</g>
<g >
<title>alloc_words (78 samples, 0.01%)</title><rect x="1145.8" y="117" width="0.2" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="1148.85" y="127.5" ></text>
</g>
<g >
<title>can_tag_i64 (96 samples, 0.01%)</title><rect x="309.6" y="69" width="0.2" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="312.63" y="79.5" ></text>
</g>
<g >
<title>can_tag_i64 (96 samples, 0.01%)</title><rect x="326.1" y="69" width="0.1" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="329.10" y="79.5" ></text>
</g>
<g >
<title>@deserialize&lt;&gt; (2,052 samples, 0.28%)</title><rect x="238.8" y="133" width="3.3" height="15.0" fill="rgb(242,176,41)" rx="2" ry="2" />
<text  x="241.83" y="143.5" ></text>
</g>
<g >
<title>B_add (1,600 samples, 0.21%)</title><rect x="1177.0" y="85" width="2.5" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="1179.96" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (192 samples, 0.03%)</title><rect x="327.9" y="53" width="0.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="330.91" y="63.5" ></text>
</g>
<g >
<title>B_gt (2,430 samples, 0.33%)</title><rect x="1044.5" y="85" width="3.8" height="15.0" fill="rgb(232,124,30)" rx="2" ry="2" />
<text  x="1047.49" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (72 samples, 0.01%)</title><rect x="1182.5" y="101" width="0.2" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="1185.54" y="111.5" ></text>
</g>
<g >
<title>Array.idx (216 samples, 0.03%)</title><rect x="311.4" y="53" width="0.3" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="314.35" y="63.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (459 samples, 0.06%)</title><rect x="1049.7" y="101" width="0.7" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="1052.70" y="111.5" ></text>
</g>
<g >
<title>B_sub (45,312 samples, 6.08%)</title><rect x="1059.4" y="85" width="71.7" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="1062.40" y="95.5" >B_sub</text>
</g>
<g >
<title>B_add (75 samples, 0.01%)</title><rect x="307.5" y="101" width="0.2" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="310.54" y="111.5" ></text>
</g>
<g >
<title>opt_project (864 samples, 0.12%)</title><rect x="1131.1" y="101" width="1.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="1134.14" y="111.5" ></text>
</g>
<g >
<title>B_add (5,150 samples, 0.69%)</title><rect x="467.9" y="101" width="8.2" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="470.92" y="111.5" ></text>
</g>
<g >
<title>B_eq (130 samples, 0.02%)</title><rect x="313.8" y="69" width="0.2" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="316.83" y="79.5" ></text>
</g>
<g >
<title>B_mul (3,834 samples, 0.51%)</title><rect x="572.1" y="69" width="6.1" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="575.11" y="79.5" ></text>
</g>
<g >
<title>alloc_blob (76 samples, 0.01%)</title><rect x="1182.5" y="117" width="0.2" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="1185.53" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_stack::push_mark_stack::h525e8b4745d2a093 (200 samples, 0.03%)</title><rect x="270.7" y="85" width="0.3" height="15.0" fill="rgb(251,127,50)" rx="2" ry="2" />
<text  x="273.71" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hbbbd9772b42fa36f (172 samples, 0.02%)</title><rect x="1189.2" y="101" width="0.2" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="1192.16" y="111.5" ></text>
</g>
<g >
<title>@buffer_size&lt;t&gt; (148 samples, 0.02%)</title><rect x="10.7" y="85" width="0.2" height="15.0" fill="rgb(244,118,43)" rx="2" ry="2" />
<text  x="13.70" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (1,728 samples, 0.23%)</title><rect x="1041.8" y="69" width="2.7" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="1044.75" y="79.5" ></text>
</g>
<g >
<title>Array.idx_bigint (1,564 samples, 0.21%)</title><rect x="288.8" y="101" width="2.5" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="291.81" y="111.5" ></text>
</g>
<g >
<title>memcpy (213 samples, 0.03%)</title><rect x="302.4" y="85" width="0.3" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="305.40" y="95.5" ></text>
</g>
<g >
<title>B_eq (210 samples, 0.03%)</title><rect x="322.0" y="85" width="0.4" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="325.03" y="95.5" ></text>
</g>
<g >
<title>@serialize&lt;t&gt; (1,134 samples, 0.15%)</title><rect x="300.9" y="101" width="1.8" height="15.0" fill="rgb(244,156,43)" rx="2" ry="2" />
<text  x="303.94" y="111.5" ></text>
</g>
<g >
<title>B_sub (160 samples, 0.02%)</title><rect x="1174.4" y="101" width="0.2" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="1177.36" y="111.5" ></text>
</g>
<g >
<title>Array.idx_bigint (26,220 samples, 3.52%)</title><rect x="679.4" y="85" width="41.5" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="682.43" y="95.5" >Arr..</text>
</g>
<g >
<title>leb128_decode (384 samples, 0.05%)</title><rect x="1142.4" y="101" width="0.6" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="1145.38" y="111.5" ></text>
</g>
<g >
<title>can_tag_i64 (31,776 samples, 4.26%)</title><rect x="827.9" y="69" width="50.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="830.86" y="79.5" >can_t..</text>
</g>
<g >
<title>alloc_blob (152 samples, 0.02%)</title><rect x="242.1" y="133" width="0.3" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="245.13" y="143.5" ></text>
</g>
<g >
<title>B_eq (18,735 samples, 2.51%)</title><rect x="476.1" y="101" width="29.6" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="479.07" y="111.5" >B_eq</text>
</g>
<g >
<title>text_to_buf (264 samples, 0.04%)</title><rect x="301.6" y="69" width="0.4" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="304.62" y="79.5" ></text>
</g>
<g >
<title>memcpy (72 samples, 0.01%)</title><rect x="1182.7" y="117" width="0.1" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="1185.65" y="127.5" ></text>
</g>
<g >
<title>canister_init (16,728 samples, 2.24%)</title><rect x="272.5" y="149" width="26.5" height="15.0" fill="rgb(236,106,34)" rx="2" ry="2" />
<text  x="275.52" y="159.5" >c..</text>
</g>
<g >
<title>obj_idx&lt;0&gt; (612 samples, 0.08%)</title><rect x="181.7" y="101" width="0.9" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="184.65" y="111.5" ></text>
</g>
<g >
<title>parse_idl_header (271 samples, 0.04%)</title><rect x="1182.0" y="117" width="0.4" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="1184.96" y="127.5" ></text>
</g>
<g >
<title>alloc_size&lt;2&gt;_tag&lt;9&gt; (864 samples, 0.12%)</title><rect x="1134.1" y="85" width="1.4" height="15.0" fill="rgb(249,128,48)" rx="2" ry="2" />
<text  x="1137.13" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (1,136 samples, 0.15%)</title><rect x="576.4" y="53" width="1.8" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="579.38" y="63.5" ></text>
</g>
<g >
<title>alloc_words (936 samples, 0.13%)</title><rect x="188.8" y="69" width="1.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="191.78" y="79.5" ></text>
</g>
<g >
<title>can_tag_i64 (64 samples, 0.01%)</title><rect x="329.1" y="53" width="0.1" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="332.06" y="63.5" ></text>
</g>
<g >
<title>can_tag_i64 (800 samples, 0.11%)</title><rect x="581.5" y="53" width="1.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="584.51" y="63.5" ></text>
</g>
<g >
<title>B_mul (486 samples, 0.07%)</title><rect x="315.2" y="69" width="0.7" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="318.18" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (72 samples, 0.01%)</title><rect x="283.7" y="101" width="0.1" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="286.69" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::h0d0130e4434da608 (360 samples, 0.05%)</title><rect x="1166.2" y="101" width="0.6" height="15.0" fill="rgb(235,127,34)" rx="2" ry="2" />
<text  x="1169.23" y="111.5" ></text>
</g>
<g >
<title>opt_project (256 samples, 0.03%)</title><rect x="1181.0" y="101" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="1183.96" y="111.5" ></text>
</g>
<g >
<title>memcpy (12,224 samples, 1.64%)</title><rect x="38.9" y="37" width="19.4" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="41.92" y="47.5" ></text>
</g>
<g >
<title>can_tag_i64 (3,976 samples, 0.53%)</title><rect x="144.0" y="85" width="6.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="147.01" y="95.5" ></text>
</g>
<g >
<title>is_empty (1,201 samples, 0.16%)</title><rect x="303.3" y="117" width="1.9" height="15.0" fill="rgb(243,129,42)" rx="2" ry="2" />
<text  x="306.32" y="127.5" ></text>
</g>
<g >
<title>B_eq (70 samples, 0.01%)</title><rect x="303.0" y="117" width="0.1" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="305.99" y="127.5" ></text>
</g>
<g >
<title>alloc_size&lt;5&gt;_tag&lt;11&gt; (864 samples, 0.12%)</title><rect x="1136.9" y="85" width="1.3" height="15.0" fill="rgb(245,128,44)" rx="2" ry="2" />
<text  x="1139.87" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_stack::push_mark_stack::h525e8b4745d2a093 (150 samples, 0.02%)</title><rect x="1166.6" y="85" width="0.2" height="15.0" fill="rgb(251,127,50)" rx="2" ry="2" />
<text  x="1169.57" y="95.5" ></text>
</g>
<g >
<title>$lambda (529,163 samples, 71.00%)</title><rect x="300.4" y="133" width="837.8" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="303.40" y="143.5" >$lambda</text>
</g>
<g >
<title>B_lt (480 samples, 0.06%)</title><rect x="323.1" y="85" width="0.8" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="326.12" y="95.5" ></text>
</g>
<g >
<title>valid_moves (509,848 samples, 68.41%)</title><rect x="331.0" y="117" width="807.2" height="15.0" fill="rgb(237,120,35)" rx="2" ry="2" />
<text  x="333.98" y="127.5" >valid_moves</text>
</g>
<g >
<title>opponent (50,976 samples, 6.84%)</title><rect x="1050.4" y="101" width="80.7" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="1053.43" y="111.5" >opponent</text>
</g>
<g >
<title>Array_init (845 samples, 0.11%)</title><rect x="280.6" y="117" width="1.3" height="15.0" fill="rgb(236,150,34)" rx="2" ry="2" />
<text  x="283.61" y="127.5" ></text>
</g>
<g >
<title>Array.idx_bigint (69 samples, 0.01%)</title><rect x="307.4" y="101" width="0.1" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="310.43" y="111.5" ></text>
</g>
<g >
<title>alloc_words (702 samples, 0.09%)</title><rect x="1135.8" y="69" width="1.1" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="1138.76" y="79.5" ></text>
</g>
<g >
<title>B_sub (768 samples, 0.10%)</title><rect x="329.8" y="85" width="1.2" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="332.77" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (3,408 samples, 0.46%)</title><rect x="556.0" y="53" width="5.4" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="559.05" y="63.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::hfd4ff3b88fbfd4c0 (13,755 samples, 1.85%)</title><rect x="1146.0" y="117" width="21.8" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="1148.97" y="127.5" >m..</text>
</g>
<g >
<title>can_tag_i64 (1,648 samples, 0.22%)</title><rect x="473.5" y="85" width="2.6" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="476.46" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (192 samples, 0.03%)</title><rect x="324.6" y="69" width="0.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="327.60" y="79.5" ></text>
</g>
<g >
<title>leb128_decode (192 samples, 0.03%)</title><rect x="1141.3" y="117" width="0.3" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="1144.30" y="127.5" ></text>
</g>
<g >
<title>B_add (12,425 samples, 1.67%)</title><rect x="101.7" y="101" width="19.7" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="104.69" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (1,008 samples, 0.14%)</title><rect x="237.2" y="69" width="1.6" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="240.23" y="79.5" ></text>
</g>
<g >
<title>Array.idx_bigint (4,738 samples, 0.64%)</title><rect x="456.4" y="101" width="7.5" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="459.40" y="111.5" ></text>
</g>
<g >
<title>opt_project (256 samples, 0.03%)</title><rect x="298.3" y="101" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="301.30" y="111.5" ></text>
</g>
<g >
<title>Array.idx (816 samples, 0.11%)</title><rect x="1172.7" y="85" width="1.2" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="1175.65" y="95.5" ></text>
</g>
<g >
<title>reset (13,943 samples, 1.87%)</title><rect x="1167.9" y="149" width="22.1" height="15.0" fill="rgb(237,165,35)" rx="2" ry="2" />
<text  x="1170.92" y="159.5" >r..</text>
</g>
<g >
<title>B_eq (11,190 samples, 1.50%)</title><rect x="878.2" y="85" width="17.7" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="881.17" y="95.5" ></text>
</g>
<g >
<title>B_mul (135 samples, 0.02%)</title><rect x="291.5" y="101" width="0.2" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="294.49" y="111.5" ></text>
</g>
<g >
<title>B_sub (96 samples, 0.01%)</title><rect x="305.2" y="101" width="0.2" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="308.24" y="111.5" ></text>
</g>
<g >
<title>B_ge (25,500 samples, 3.42%)</title><rect x="895.9" y="85" width="40.4" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="898.89" y="95.5" >B_ge</text>
</g>
<g >
<title>next (13,986 samples, 1.88%)</title><rect x="1027.6" y="101" width="22.1" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="1030.56" y="111.5" >n..</text>
</g>
<g >
<title>can_tag_i64 (96 samples, 0.01%)</title><rect x="316.3" y="53" width="0.2" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="319.35" y="63.5" ></text>
</g>
<g >
<title>B_add (5,400 samples, 0.72%)</title><rect x="1035.9" y="85" width="8.6" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="1038.94" y="95.5" ></text>
</g>
<g >
<title>memset (104 samples, 0.01%)</title><rect x="1189.0" y="101" width="0.2" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="1191.99" y="111.5" ></text>
</g>
<g >
<title>sleb128_decode (729 samples, 0.10%)</title><rect x="1144.4" y="117" width="1.2" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="1147.44" y="127.5" ></text>
</g>
<g >
<title>memcpy (180 samples, 0.02%)</title><rect x="301.8" y="53" width="0.2" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="304.75" y="63.5" ></text>
</g>
<g >
<title>opponent (864 samples, 0.12%)</title><rect x="329.6" y="101" width="1.4" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="332.62" y="111.5" ></text>
</g>
<g >
<title>text_to_buf (29,728 samples, 3.99%)</title><rect x="11.2" y="69" width="47.1" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="14.21" y="79.5" >text..</text>
</g>
<g >
<title>next (3,990 samples, 0.54%)</title><rect x="1174.6" y="101" width="6.3" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="1177.61" y="111.5" ></text>
</g>
<g >
<title>parse_idl_header (1,084 samples, 0.15%)</title><rect x="240.4" y="117" width="1.7" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="243.36" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::hfd4ff3b88fbfd4c0 (4,491 samples, 0.60%)</title><rect x="1182.8" y="117" width="7.1" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="1185.83" y="127.5" ></text>
</g>
<g >
<title>Array.idx (816 samples, 0.11%)</title><rect x="290.0" y="85" width="1.3" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="293.00" y="95.5" ></text>
</g>
<g >
<title>B_sub (384 samples, 0.05%)</title><rect x="316.0" y="69" width="0.6" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="319.02" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (144 samples, 0.02%)</title><rect x="242.1" y="117" width="0.3" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="245.14" y="127.5" ></text>
</g>
<g >
<title>Array.idx_bigint (184 samples, 0.02%)</title><rect x="327.0" y="69" width="0.3" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="329.98" y="79.5" ></text>
</g>
<g >
<title>nat_sub (189 samples, 0.03%)</title><rect x="515.7" y="85" width="0.3" height="15.0" fill="rgb(228,158,25)" rx="2" ry="2" />
<text  x="518.74" y="95.5" ></text>
</g>
<g >
<title>B_add (75 samples, 0.01%)</title><rect x="302.9" y="117" width="0.1" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="305.87" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hbbbd9772b42fa36f (172 samples, 0.02%)</title><rect x="279.7" y="101" width="0.3" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="282.73" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::types::block_size::h3f6b24f4d5b088b5 (128 samples, 0.02%)</title><rect x="280.3" y="101" width="0.2" height="15.0" fill="rgb(233,127,31)" rx="2" ry="2" />
<text  x="283.30" y="111.5" ></text>
</g>
<g >
<title>B_add (1,350 samples, 0.18%)</title><rect x="311.7" y="69" width="2.1" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="314.69" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hbbbd9772b42fa36f (1,288 samples, 0.17%)</title><rect x="268.2" y="101" width="2.1" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="271.22" y="111.5" ></text>
</g>
<g >
<title>text_concat (29,524 samples, 3.96%)</title><rect x="192.1" y="101" width="46.7" height="15.0" fill="rgb(232,171,30)" rx="2" ry="2" />
<text  x="195.08" y="111.5" >text..</text>
</g>
<g >
<title>B_add (100 samples, 0.01%)</title><rect x="1173.9" y="101" width="0.2" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="1176.95" y="111.5" ></text>
</g>
<g >
<title>opt_project (1,152 samples, 0.15%)</title><rect x="182.6" y="101" width="1.8" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="185.62" y="111.5" ></text>
</g>
<g >
<title>Array.idx (13,680 samples, 1.84%)</title><rect x="699.3" y="69" width="21.6" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="702.29" y="79.5" >A..</text>
</g>
<g >
<title>exists (5,226 samples, 0.70%)</title><rect x="316.6" y="101" width="8.3" height="15.0" fill="rgb(234,142,32)" rx="2" ry="2" />
<text  x="319.63" y="111.5" ></text>
</g>
<g >
<title>B_lt (360 samples, 0.05%)</title><rect x="314.6" y="69" width="0.6" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="317.61" y="79.5" ></text>
</g>
<g >
<title>B_add (99,300 samples, 13.32%)</title><rect x="720.9" y="85" width="157.3" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="723.95" y="95.5" >B_add</text>
</g>
<g >
<title>@buffer_size&lt;t&gt; (111 samples, 0.01%)</title><rect x="301.2" y="85" width="0.2" height="15.0" fill="rgb(244,118,43)" rx="2" ry="2" />
<text  x="304.24" y="95.5" ></text>
</g>
<g >
<title>B_ge (360 samples, 0.05%)</title><rect x="314.0" y="69" width="0.6" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="317.04" y="79.5" ></text>
</g>
<g >
<title>B_mul (30,780 samples, 4.13%)</title><rect x="978.8" y="85" width="48.8" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="981.82" y="95.5" >B_mul</text>
</g>
<g >
<title>B_eq (4,860 samples, 0.65%)</title><rect x="121.4" y="101" width="7.7" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="124.36" y="111.5" ></text>
</g>
<g >
<title>B_add (300 samples, 0.04%)</title><rect x="325.8" y="85" width="0.4" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="328.77" y="95.5" ></text>
</g>
<g >
<title>B_add (1,600 samples, 0.21%)</title><rect x="294.3" y="85" width="2.5" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="297.31" y="95.5" ></text>
</g>
<g >
<title>opt_inject (256 samples, 0.03%)</title><rect x="1180.5" y="85" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="1183.53" y="95.5" ></text>
</g>
<g >
<title>range (3,618 samples, 0.49%)</title><rect x="1132.5" y="101" width="5.7" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="1135.51" y="111.5" ></text>
</g>
<g >
<title>can_tag_i64 (512 samples, 0.07%)</title><rect x="1178.7" y="69" width="0.8" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="1181.69" y="79.5" ></text>
</g>
<g >
<title>sleb128_decode (729 samples, 0.10%)</title><rect x="1143.2" y="101" width="1.1" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="1146.16" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (216 samples, 0.03%)</title><rect x="302.1" y="69" width="0.3" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="305.06" y="79.5" ></text>
</g>
<g >
<title>B_mul (108 samples, 0.01%)</title><rect x="326.2" y="85" width="0.2" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="329.25" y="95.5" ></text>
</g>
<g >
<title>exists (30,738 samples, 4.12%)</title><rect x="529.5" y="85" width="48.7" height="15.0" fill="rgb(234,142,32)" rx="2" ry="2" />
<text  x="532.52" y="95.5" >exists</text>
</g>
<g >
<title>memset (444 samples, 0.06%)</title><rect x="1164.5" y="101" width="0.7" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="1167.48" y="111.5" ></text>
</g>
<g >
<title>alloc_words (702 samples, 0.09%)</title><rect x="1134.4" y="69" width="1.1" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="1137.39" y="79.5" ></text>
</g>
<g >
<title>alloc_blob (304 samples, 0.04%)</title><rect x="58.3" y="85" width="0.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="61.28" y="95.5" ></text>
</g>
<g >
<title>B_gt (3,240 samples, 0.43%)</title><rect x="174.7" y="85" width="5.1" height="15.0" fill="rgb(232,124,30)" rx="2" ry="2" />
<text  x="177.70" y="95.5" ></text>
</g>
<g >
<title>range (134 samples, 0.02%)</title><rect x="1181.4" y="101" width="0.2" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="1184.36" y="111.5" ></text>
</g>
<g >
<title>@serialize&lt;t&gt; (30,888 samples, 4.14%)</title><rect x="10.3" y="101" width="48.9" height="15.0" fill="rgb(244,156,43)" rx="2" ry="2" />
<text  x="13.30" y="111.5" >@ser..</text>
</g>
<g >
<title>B_mul (5,643 samples, 0.76%)</title><rect x="505.7" y="101" width="9.0" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="508.74" y="111.5" ></text>
</g>
<g >
<title>opponent (288 samples, 0.04%)</title><rect x="329.2" y="85" width="0.4" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="332.16" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::principal_id::enc_stash::hb3d1bc6c0c40a4a1 (372 samples, 0.05%)</title><rect x="284.7" y="85" width="0.6" height="15.0" fill="rgb(226,127,23)" rx="2" ry="2" />
<text  x="287.72" y="95.5" ></text>
</g>
<g >
<title>init (11,648 samples, 1.56%)</title><rect x="280.5" y="133" width="18.4" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="283.51" y="143.5" ></text>
</g>
<g >
<title>$lambda (30,924 samples, 4.15%)</title><rect x="10.3" y="117" width="48.9" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="13.27" y="127.5" >$lam..</text>
</g>
<g >
<title>exists (1,732 samples, 0.23%)</title><rect x="326.4" y="85" width="2.8" height="15.0" fill="rgb(234,142,32)" rx="2" ry="2" />
<text  x="329.42" y="95.5" ></text>
</g>
<g >
<title>opt_inject (256 samples, 0.03%)</title><rect x="297.9" y="85" width="0.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="300.87" y="95.5" ></text>
</g>
<g >
<title>link_start (707 samples, 0.09%)</title><rect x="299.0" y="149" width="1.1" height="15.0" fill="rgb(239,129,37)" rx="2" ry="2" />
<text  x="302.00" y="159.5" ></text>
</g>
<g >
<title>trans_state4 (69 samples, 0.01%)</title><rect x="1167.8" y="133" width="0.1" height="15.0" fill="rgb(243,158,42)" rx="2" ry="2" />
<text  x="1170.75" y="143.5" ></text>
</g>
<g >
<title>B_add (7,200 samples, 0.97%)</title><rect x="163.3" y="85" width="11.4" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="166.30" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::h0d0130e4434da608 (120 samples, 0.02%)</title><rect x="1189.4" y="101" width="0.2" height="15.0" fill="rgb(235,127,34)" rx="2" ry="2" />
<text  x="1192.43" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (72 samples, 0.01%)</title><rect x="284.6" y="85" width="0.1" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="287.60" y="95.5" ></text>
</g>
<g >
<title>$lambda (144,402 samples, 19.38%)</title><rect x="10.2" y="133" width="228.6" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="13.20" y="143.5" >$lambda</text>
</g>
<g >
<title>@serialize&lt;&gt; (229 samples, 0.03%)</title><rect x="1182.4" y="133" width="0.4" height="15.0" fill="rgb(242,156,41)" rx="2" ry="2" />
<text  x="1185.40" y="143.5" ></text>
</g>
<g >
<title>nat_sub (84 samples, 0.01%)</title><rect x="316.5" y="53" width="0.1" height="15.0" fill="rgb(228,158,25)" rx="2" ry="2" />
<text  x="319.50" y="63.5" ></text>
</g>
<g >
<title>can_tag_i64 (288 samples, 0.04%)</title><rect x="151.3" y="85" width="0.4" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="154.27" y="95.5" ></text>
</g>
<g >
<title>B_mul (81 samples, 0.01%)</title><rect x="303.2" y="117" width="0.1" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="306.19" y="127.5" ></text>
</g>
<g >
<title>nat_sub (168 samples, 0.02%)</title><rect x="330.7" y="69" width="0.3" height="15.0" fill="rgb(228,158,25)" rx="2" ry="2" />
<text  x="333.72" y="79.5" ></text>
</g>
<g >
<title>B_sub (1,152 samples, 0.15%)</title><rect x="150.3" y="101" width="1.8" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="153.30" y="111.5" ></text>
</g>
<g >
<title>blob_of_principal (2,083 samples, 0.28%)</title><rect x="282.0" y="117" width="3.3" height="15.0" fill="rgb(228,110,25)" rx="2" ry="2" />
<text  x="285.04" y="127.5" ></text>
</g>
<g >
<title>Array.idx (2,472 samples, 0.33%)</title><rect x="460.0" y="85" width="3.9" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="462.99" y="95.5" ></text>
</g>
<g >
<title>leb128_decode (256 samples, 0.03%)</title><rect x="240.0" y="117" width="0.4" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="242.96" y="127.5" ></text>
</g>
<g >
<title>board (165,802 samples, 22.25%)</title><rect x="10.0" y="149" width="262.5" height="15.0" fill="rgb(249,157,49)" rx="2" ry="2" />
<text  x="13.00" y="159.5" >board</text>
</g>
<g >
<title>alloc_array (141 samples, 0.02%)</title><rect x="467.7" y="85" width="0.2" height="15.0" fill="rgb(239,128,37)" rx="2" ry="2" />
<text  x="470.69" y="95.5" ></text>
</g>
<g >
<title>B_add (100 samples, 0.01%)</title><rect x="291.3" y="101" width="0.1" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="294.29" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::principal_id::principal_of_blob::h881330e12543f269 (949 samples, 0.13%)</title><rect x="283.8" y="101" width="1.5" height="15.0" fill="rgb(230,127,27)" rx="2" ry="2" />
<text  x="286.80" y="111.5" ></text>
</g>
<g >
<title>set_and_flip (16,164 samples, 2.17%)</title><rect x="305.4" y="117" width="25.6" height="15.0" fill="rgb(244,154,43)" rx="2" ry="2" />
<text  x="308.39" y="127.5" >s..</text>
</g>
<g >
<title>Array.idx_bigint (11,431 samples, 1.53%)</title><rect x="83.6" y="101" width="18.1" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="86.59" y="111.5" ></text>
</g>
<g >
<title>B_mul (135 samples, 0.02%)</title><rect x="1174.1" y="101" width="0.3" height="15.0" fill="rgb(232,143,30)" rx="2" ry="2" />
<text  x="1177.15" y="111.5" ></text>
</g>
<g >
<title>can_tag_i64 (432 samples, 0.06%)</title><rect x="313.1" y="53" width="0.7" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="316.15" y="63.5" ></text>
</g>
<g >
<title>leb128_decode (64 samples, 0.01%)</title><rect x="1181.9" y="117" width="0.1" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="1184.86" y="127.5" ></text>
</g>
<g >
<title>opponent (432 samples, 0.06%)</title><rect x="315.9" y="85" width="0.7" height="15.0" fill="rgb(241,199,39)" rx="2" ry="2" />
<text  x="318.95" y="95.5" ></text>
</g>
<g >
<title>can_tag_i64 (2,304 samples, 0.31%)</title><rect x="171.1" y="69" width="3.6" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="174.05" y="79.5" ></text>
</g>
<g >
<title>can_tag_i64 (216 samples, 0.03%)</title><rect x="515.4" y="85" width="0.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="518.40" y="95.5" ></text>
</g>
<g >
<title>alloc_size&lt;4&gt;_tag&lt;1&gt; (1,152 samples, 0.15%)</title><rect x="188.4" y="85" width="1.9" height="15.0" fill="rgb(246,128,45)" rx="2" ry="2" />
<text  x="191.44" y="95.5" ></text>
</g>
<g >
<title>B_lt (2,840 samples, 0.38%)</title><rect x="567.6" y="69" width="4.5" height="15.0" fill="rgb(226,146,24)" rx="2" ry="2" />
<text  x="570.62" y="79.5" ></text>
</g>
<g >
<title>Array_init (2,535 samples, 0.34%)</title><rect x="463.9" y="101" width="4.0" height="15.0" fill="rgb(236,150,34)" rx="2" ry="2" />
<text  x="466.90" y="111.5" ></text>
</g>
<g >
<title>B_add (600 samples, 0.08%)</title><rect x="327.3" y="69" width="0.9" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="330.27" y="79.5" ></text>
</g>
<g >
<title>range (134 samples, 0.02%)</title><rect x="298.7" y="101" width="0.2" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="301.71" y="111.5" ></text>
</g>
<g >
<title>memcpy (284 samples, 0.04%)</title><rect x="58.8" y="85" width="0.4" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="61.76" y="95.5" ></text>
</g>
<g >
<title>trans_state4 (92 samples, 0.01%)</title><rect x="272.3" y="133" width="0.1" height="15.0" fill="rgb(243,158,42)" rx="2" ry="2" />
<text  x="275.29" y="143.5" ></text>
</g>
<g >
<title>alloc_words (936 samples, 0.13%)</title><rect x="187.0" y="69" width="1.4" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="189.95" y="79.5" ></text>
</g>
<g >
<title>alloc_words (936 samples, 0.13%)</title><rect x="190.6" y="69" width="1.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="193.60" y="79.5" ></text>
</g>
<g >
<title>B_sub (864 samples, 0.12%)</title><rect x="514.7" y="101" width="1.3" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="517.67" y="111.5" ></text>
</g>
<g >
<title>compacting_gc (5,034 samples, 0.68%)</title><rect x="272.5" y="133" width="8.0" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="275.54" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (288 samples, 0.04%)</title><rect x="58.3" y="69" width="0.5" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="61.30" y="79.5" ></text>
</g>
<g >
<title>alloc_blob (114 samples, 0.02%)</title><rect x="1145.6" y="133" width="0.2" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="1148.64" y="143.5" ></text>
</g>
<g >
<title>place (548,090 samples, 73.54%)</title><rect x="300.1" y="149" width="867.8" height="15.0" fill="rgb(252,165,52)" rx="2" ry="2" />
<text  x="303.12" y="159.5" >place</text>
</g>
<g >
<title>motoko_rts::types::block_size::h3f6b24f4d5b088b5 (512 samples, 0.07%)</title><rect x="271.5" y="101" width="0.8" height="15.0" fill="rgb(233,127,31)" rx="2" ry="2" />
<text  x="274.48" y="111.5" ></text>
</g>
<g >
<title>exists (3,892 samples, 0.52%)</title><rect x="309.8" y="85" width="6.1" height="15.0" fill="rgb(234,142,32)" rx="2" ry="2" />
<text  x="312.78" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (108 samples, 0.01%)</title><rect x="1143.0" y="101" width="0.2" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="1145.99" y="111.5" ></text>
</g>
<g >
<title>B_gt (650 samples, 0.09%)</title><rect x="1179.5" y="85" width="1.0" height="15.0" fill="rgb(232,124,30)" rx="2" ry="2" />
<text  x="1182.50" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::hfd4ff3b88fbfd4c0 (18,892 samples, 2.53%)</title><rect x="242.4" y="117" width="29.9" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="245.38" y="127.5" >mo..</text>
</g>
<g >
<title>can_tag_i64 (192 samples, 0.03%)</title><rect x="330.4" y="69" width="0.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="333.41" y="79.5" ></text>
</g>
<g >
<title>can_tag_i64 (144 samples, 0.02%)</title><rect x="315.7" y="53" width="0.2" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="318.72" y="63.5" ></text>
</g>
<g >
<title>Array.idx_bigint (552 samples, 0.07%)</title><rect x="318.3" y="85" width="0.9" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="321.30" y="95.5" ></text>
</g>
<g >
<title>memcmp (179 samples, 0.02%)</title><rect x="283.3" y="101" width="0.3" height="15.0" fill="rgb(238,144,36)" rx="2" ry="2" />
<text  x="286.33" y="111.5" ></text>
</g>
<g >
<title>can_tag_i64 (64 samples, 0.01%)</title><rect x="329.4" y="53" width="0.1" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="332.43" y="63.5" ></text>
</g>
<g >
<title>memset (744 samples, 0.10%)</title><rect x="267.0" y="101" width="1.2" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="270.05" y="111.5" ></text>
</g>
<g >
<title>__wasm_call_ctors (666 samples, 0.09%)</title><rect x="299.0" y="133" width="1.1" height="15.0" fill="rgb(239,119,38)" rx="2" ry="2" />
<text  x="302.01" y="143.5" ></text>
</g>
<g >
<title>@serialize_go&lt;t&gt; (393 samples, 0.05%)</title><rect x="301.4" y="85" width="0.6" height="15.0" fill="rgb(244,156,43)" rx="2" ry="2" />
<text  x="304.42" y="95.5" ></text>
</g>
<g >
<title>B_eq (300 samples, 0.04%)</title><rect x="307.7" y="101" width="0.4" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="310.66" y="111.5" ></text>
</g>
<g >
<title>B_add (300 samples, 0.04%)</title><rect x="309.3" y="85" width="0.5" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="312.31" y="95.5" ></text>
</g>
<g >
<title>B_sub (3,200 samples, 0.43%)</title><rect x="578.8" y="69" width="5.1" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="581.82" y="79.5" ></text>
</g>
<g >
<title>B_add (10,650 samples, 1.43%)</title><rect x="544.6" y="69" width="16.8" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="547.58" y="79.5" ></text>
</g>
<g >
<title>nat_sub (700 samples, 0.09%)</title><rect x="582.8" y="53" width="1.1" height="15.0" fill="rgb(228,158,25)" rx="2" ry="2" />
<text  x="585.78" y="63.5" ></text>
</g>
<g >
<title>Array.idx_bigint (69 samples, 0.01%)</title><rect x="302.8" y="117" width="0.1" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="305.76" y="127.5" ></text>
</g>
<g >
<title>memset (104 samples, 0.01%)</title><rect x="279.6" y="101" width="0.1" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="282.56" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (72 samples, 0.01%)</title><rect x="280.2" y="101" width="0.1" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="283.19" y="111.5" ></text>
</g>
<g >
<title>all (745,270 samples, 100%)</title><rect x="10.0" y="165" width="1180.0" height="15.0" fill="rgb(255,230,55)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>Array.idx (288 samples, 0.04%)</title><rect x="318.7" y="69" width="0.5" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="321.72" y="79.5" ></text>
</g>
<g >
<title>can_tag_i64 (576 samples, 0.08%)</title><rect x="321.1" y="69" width="0.9" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="324.11" y="79.5" ></text>
</g>
<g >
<title>B_ge (2,840 samples, 0.38%)</title><rect x="563.1" y="69" width="4.5" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="566.12" y="79.5" ></text>
</g>
<g >
<title>eventually (42,850 samples, 5.75%)</title><rect x="516.0" y="101" width="67.9" height="15.0" fill="rgb(243,165,42)" rx="2" ry="2" />
<text  x="519.04" y="111.5" >eventua..</text>
</g>
</g>
</svg>
