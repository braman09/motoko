<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="230" onload="init(evt)" viewBox="0 0 1200 230" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="230.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >assetstorage.mo</text>
<text id="details" x="10.00" y="213" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="matched" x="1090.00" y="213" > </text>
<g id="frames">
<g >
<title>iter (472 samples, 1.31%)</title><rect x="444.7" y="117" width="15.5" height="15.0" fill="rgb(240,143,38)" rx="2" ry="2" />
<text  x="447.72" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hbbbd9772b42fa36f (550 samples, 1.53%)</title><rect x="223.8" y="117" width="18.0" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="226.83" y="127.5" ></text>
</g>
<g >
<title>canister_self (48 samples, 0.13%)</title><rect x="388.6" y="133" width="1.6" height="15.0" fill="rgb(238,106,36)" rx="2" ry="2" />
<text  x="391.61" y="143.5" ></text>
</g>
<g >
<title>memcmp (179 samples, 0.50%)</title><rect x="347.1" y="117" width="5.9" height="15.0" fill="rgb(238,144,36)" rx="2" ry="2" />
<text  x="350.12" y="127.5" ></text>
</g>
<g >
<title>compare (574 samples, 1.59%)</title><rect x="657.3" y="101" width="18.8" height="15.0" fill="rgb(248,149,47)" rx="2" ry="2" />
<text  x="660.28" y="111.5" ></text>
</g>
<g >
<title>getRec (659 samples, 1.83%)</title><rect x="654.5" y="117" width="21.6" height="15.0" fill="rgb(230,170,27)" rx="2" ry="2" />
<text  x="657.50" y="127.5" >g..</text>
</g>
<g >
<title>can_tag_i64 (8 samples, 0.02%)</title><rect x="526.5" y="85" width="0.2" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="529.46" y="95.5" ></text>
</g>
<g >
<title>@deserialize&lt;&gt; (1,026 samples, 2.85%)</title><rect x="601.9" y="149" width="33.6" height="15.0" fill="rgb(242,176,41)" rx="2" ry="2" />
<text  x="604.88" y="159.5" >@d..</text>
</g>
<g >
<title>alloc_blob (76 samples, 0.21%)</title><rect x="636.0" y="149" width="2.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="638.98" y="159.5" ></text>
</g>
<g >
<title>idl_sub_buf_init (38 samples, 0.11%)</title><rect x="611.7" y="133" width="1.2" height="15.0" fill="rgb(236,184,34)" rx="2" ry="2" />
<text  x="614.70" y="143.5" ></text>
</g>
<g >
<title>compacting_gc (10,957 samples, 30.38%)</title><rect x="830.3" y="149" width="358.5" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="833.30" y="159.5" >compacting_gc</text>
</g>
<g >
<title>opt_inject (72 samples, 0.20%)</title><rect x="562.0" y="69" width="2.4" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="565.03" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::text::text_compare_range::h9503d7821d2b0ac1 (237 samples, 0.66%)</title><rect x="668.3" y="53" width="7.8" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="671.30" y="63.5" ></text>
</g>
<g >
<title>alloc_size&lt;4&gt;_tag&lt;11&gt; (256 samples, 0.71%)</title><rect x="494.6" y="101" width="8.4" height="15.0" fill="rgb(245,128,44)" rx="2" ry="2" />
<text  x="497.59" y="111.5" ></text>
</g>
<g >
<title>insertRec (170 samples, 0.47%)</title><rect x="744.3" y="101" width="5.6" height="15.0" fill="rgb(230,167,27)" rx="2" ry="2" />
<text  x="747.35" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (36 samples, 0.10%)</title><rect x="764.1" y="101" width="1.2" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="767.08" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (72 samples, 0.20%)</title><rect x="649.7" y="85" width="2.3" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="652.69" y="95.5" ></text>
</g>
<g >
<title>Array.unsafe_idx (7 samples, 0.02%)</title><rect x="434.1" y="85" width="0.2" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="437.09" y="95.5" ></text>
</g>
<g >
<title>initialize_compacting_gc (17 samples, 0.05%)</title><rect x="415.0" y="117" width="0.6" height="15.0" fill="rgb(227,161,24)" rx="2" ry="2" />
<text  x="418.01" y="127.5" ></text>
</g>
<g >
<title>alloc_size&lt;6&gt;_tag&lt;11&gt; (64 samples, 0.18%)</title><rect x="517.6" y="101" width="2.1" height="15.0" fill="rgb(245,128,44)" rx="2" ry="2" />
<text  x="520.63" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::types::block_size::h3f6b24f4d5b088b5 (768 samples, 2.13%)</title><rect x="273.2" y="117" width="25.2" height="15.0" fill="rgb(233,127,31)" rx="2" ry="2" />
<text  x="276.24" y="127.5" >m..</text>
</g>
<g >
<title>alloc_size&lt;15&gt;_tag&lt;1&gt; (64 samples, 0.18%)</title><rect x="486.2" y="101" width="2.1" height="15.0" fill="rgb(246,128,45)" rx="2" ry="2" />
<text  x="489.21" y="111.5" ></text>
</g>
<g >
<title>memcpy (48 samples, 0.13%)</title><rect x="353.0" y="117" width="1.5" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="355.98" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::text::blob_of_text::h7c8c10c3e9dea030 (20 samples, 0.06%)</title><rect x="388.0" y="117" width="0.6" height="15.0" fill="rgb(233,127,31)" rx="2" ry="2" />
<text  x="390.95" y="127.5" ></text>
</g>
<g >
<title>alloc_size&lt;3&gt;_tag&lt;15&gt; (32 samples, 0.09%)</title><rect x="743.3" y="101" width="1.0" height="15.0" fill="rgb(240,128,39)" rx="2" ry="2" />
<text  x="746.30" y="111.5" ></text>
</g>
<g >
<title>alloc_size&lt;4&gt;_tag&lt;11&gt; (64 samples, 0.18%)</title><rect x="599.8" y="101" width="2.1" height="15.0" fill="rgb(245,128,44)" rx="2" ry="2" />
<text  x="602.79" y="111.5" ></text>
</g>
<g >
<title>alloc_size&lt;4&gt;_tag&lt;11&gt; (64 samples, 0.18%)</title><rect x="519.7" y="117" width="2.1" height="15.0" fill="rgb(245,128,44)" rx="2" ry="2" />
<text  x="522.72" y="127.5" ></text>
</g>
<g >
<title>memcpy (59 samples, 0.16%)</title><rect x="652.0" y="101" width="2.0" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="655.04" y="111.5" ></text>
</g>
<g >
<title>Array.idx_bigint (23 samples, 0.06%)</title><rect x="599.0" y="69" width="0.8" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="602.03" y="79.5" ></text>
</g>
<g >
<title>alloc_words (52 samples, 0.14%)</title><rect x="462.4" y="101" width="1.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="465.39" y="111.5" ></text>
</g>
<g >
<title>memcmp (95 samples, 0.26%)</title><rect x="662.8" y="37" width="3.1" height="15.0" fill="rgb(238,144,36)" rx="2" ry="2" />
<text  x="665.77" y="47.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (17 samples, 0.05%)</title><rect x="537.9" y="85" width="0.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="540.88" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (72 samples, 0.20%)</title><rect x="726.6" y="85" width="2.4" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="729.64" y="95.5" ></text>
</g>
<g >
<title>Array.unsafe_idx (7 samples, 0.02%)</title><rect x="427.2" y="85" width="0.2" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="430.19" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_array::h717e7276f702fa10 (45 samples, 0.12%)</title><rect x="534.6" y="37" width="1.5" height="15.0" fill="rgb(234,127,32)" rx="2" ry="2" />
<text  x="537.61" y="47.5" ></text>
</g>
<g >
<title>alloc_size&lt;4&gt;_tag&lt;11&gt; (32 samples, 0.09%)</title><rect x="716.7" y="149" width="1.1" height="15.0" fill="rgb(245,128,44)" rx="2" ry="2" />
<text  x="719.73" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::principal_id::principal_of_blob::h881330e12543f269 (949 samples, 2.63%)</title><rect x="356.9" y="117" width="31.1" height="15.0" fill="rgb(230,127,27)" rx="2" ry="2" />
<text  x="359.90" y="127.5" >mo..</text>
</g>
<g >
<title>to_4_tuple (49 samples, 0.14%)</title><rect x="748.3" y="85" width="1.6" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="751.31" y="95.5" ></text>
</g>
<g >
<title>$lambda (238 samples, 0.66%)</title><rect x="723.7" y="133" width="7.8" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="726.70" y="143.5" ></text>
</g>
<g >
<title>parse_idl_header (542 samples, 1.50%)</title><rect x="617.7" y="133" width="17.8" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="620.72" y="143.5" ></text>
</g>
<g >
<title>alloc_words (130 samples, 0.36%)</title><rect x="312.9" y="101" width="4.2" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="315.86" y="111.5" ></text>
</g>
<g >
<title>from_2_tuple (6 samples, 0.02%)</title><rect x="543.0" y="69" width="0.1" height="15.0" fill="rgb(240,184,39)" rx="2" ry="2" />
<text  x="545.95" y="79.5" ></text>
</g>
<g >
<title>alloc_size&lt;4&gt;_tag&lt;5&gt; (64 samples, 0.18%)</title><rect x="458.1" y="85" width="2.1" height="15.0" fill="rgb(241,128,40)" rx="2" ry="2" />
<text  x="461.07" y="95.5" ></text>
</g>
<g >
<title>sleb128_decode (81 samples, 0.22%)</title><rect x="709.6" y="117" width="2.7" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="712.63" y="127.5" ></text>
</g>
<g >
<title>sleb128_decode (162 samples, 0.45%)</title><rect x="769.3" y="117" width="5.3" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="772.31" y="127.5" ></text>
</g>
<g >
<title>entries (488 samples, 1.35%)</title><rect x="444.2" y="133" width="16.0" height="15.0" fill="rgb(237,196,36)" rx="2" ry="2" />
<text  x="447.20" y="143.5" ></text>
</g>
<g >
<title>leb128_encode (12 samples, 0.03%)</title><rect x="430.7" y="69" width="0.4" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="433.69" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::bitmap::BitmapIter::next::hbbbd9772b42fa36f (735 samples, 2.04%)</title><rect x="1087.9" y="117" width="24.1" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="1090.94" y="127.5" >m..</text>
</g>
<g >
<title>alloc_size&lt;4&gt;_tag&lt;11&gt; (96 samples, 0.27%)</title><rect x="308.7" y="117" width="3.2" height="15.0" fill="rgb(245,128,44)" rx="2" ry="2" />
<text  x="311.74" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (144 samples, 0.40%)</title><rect x="435.4" y="85" width="4.7" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="438.37" y="95.5" ></text>
</g>
<g >
<title>@serialize_go&lt;t&gt; (131 samples, 0.36%)</title><rect x="429.8" y="85" width="4.3" height="15.0" fill="rgb(244,156,43)" rx="2" ry="2" />
<text  x="432.80" y="95.5" ></text>
</g>
<g >
<title>alloc_words (26 samples, 0.07%)</title><rect x="747.5" y="53" width="0.8" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="750.46" y="63.5" ></text>
</g>
<g >
<title>get (671 samples, 1.86%)</title><rect x="654.1" y="133" width="22.0" height="15.0" fill="rgb(237,170,35)" rx="2" ry="2" />
<text  x="657.10" y="143.5" >get</text>
</g>
<g >
<title>motoko_rts::text::text_get_range::he41d097cc447bc41 (28 samples, 0.08%)</title><rect x="675.1" y="37" width="1.0" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="678.14" y="47.5" ></text>
</g>
<g >
<title>all (36,063 samples, 100%)</title><rect x="10.0" y="181" width="1180.0" height="15.0" fill="rgb(255,230,55)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>alloc_size&lt;2&gt;_tag&lt;9&gt; (128 samples, 0.35%)</title><rect x="490.4" y="101" width="4.2" height="15.0" fill="rgb(249,128,48)" rx="2" ry="2" />
<text  x="493.40" y="111.5" ></text>
</g>
<g >
<title>obj_idx&lt;1&gt; (17 samples, 0.05%)</title><rect x="740.1" y="133" width="0.5" height="15.0" fill="rgb(246,139,45)" rx="2" ry="2" />
<text  x="743.06" y="143.5" ></text>
</g>
<g >
<title>alloc_words (26 samples, 0.07%)</title><rect x="743.5" y="85" width="0.8" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="746.50" y="95.5" ></text>
</g>
<g >
<title>compute_crc32 (33 samples, 0.09%)</title><rect x="372.3" y="101" width="1.1" height="15.0" fill="rgb(245,149,44)" rx="2" ry="2" />
<text  x="375.35" y="111.5" ></text>
</g>
<g >
<title>idl_sub_buf_init (19 samples, 0.05%)</title><rect x="697.1" y="133" width="0.7" height="15.0" fill="rgb(236,184,34)" rx="2" ry="2" />
<text  x="700.13" y="143.5" ></text>
</g>
<g >
<title>set_local %i1 (6 samples, 0.02%)</title><rect x="822.1" y="133" width="0.2" height="15.0" fill="rgb(232,154,29)" rx="2" ry="2" />
<text  x="825.06" y="143.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8::h4500db47ae834319 (209 samples, 0.58%)</title><rect x="783.5" y="101" width="6.9" height="15.0" fill="rgb(235,133,33)" rx="2" ry="2" />
<text  x="786.55" y="111.5" ></text>
</g>
<g >
<title>memcpy (60 samples, 0.17%)</title><rect x="687.5" y="101" width="2.0" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="690.51" y="111.5" ></text>
</g>
<g >
<title>init (2,841 samples, 7.88%)</title><rect x="298.4" y="149" width="92.9" height="15.0" fill="rgb(236,161,34)" rx="2" ry="2" />
<text  x="301.37" y="159.5" >init</text>
</g>
<g >
<title>@serialize&lt;vt&gt; (771 samples, 2.14%)</title><rect x="418.7" y="117" width="25.2" height="15.0" fill="rgb(237,156,36)" rx="2" ry="2" />
<text  x="421.71" y="127.5" >@..</text>
</g>
<g >
<title>idl_sub_buf_words (9 samples, 0.02%)</title><rect x="697.8" y="133" width="0.2" height="15.0" fill="rgb(241,184,39)" rx="2" ry="2" />
<text  x="700.75" y="143.5" ></text>
</g>
<g >
<title>compacting_gc (8,801 samples, 24.40%)</title><rect x="10.4" y="149" width="288.0" height="15.0" fill="rgb(227,149,24)" rx="2" ry="2" />
<text  x="13.39" y="159.5" >compacting_gc</text>
</g>
<g >
<title>motoko_rts::memory::alloc_array::h717e7276f702fa10 (90 samples, 0.25%)</title><rect x="595.9" y="69" width="2.9" height="15.0" fill="rgb(234,127,32)" rx="2" ry="2" />
<text  x="598.86" y="79.5" ></text>
</g>
<g >
<title>@deserialize&lt;tB&gt; (2,287 samples, 6.34%)</title><rect x="752.9" y="149" width="74.9" height="15.0" fill="rgb(245,176,45)" rx="2" ry="2" />
<text  x="755.92" y="159.5" >@deseria..</text>
</g>
<g >
<title>next (1,515 samples, 4.20%)</title><rect x="538.4" y="101" width="49.6" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="541.44" y="111.5" >next</text>
</g>
<g >
<title>utf8_validate (232 samples, 0.64%)</title><rect x="782.8" y="117" width="7.6" height="15.0" fill="rgb(245,124,45)" rx="2" ry="2" />
<text  x="785.79" y="127.5" ></text>
</g>
<g >
<title>obj_idx&lt;11&gt; (34 samples, 0.09%)</title><rect x="590.3" y="117" width="1.1" height="15.0" fill="rgb(245,139,44)" rx="2" ry="2" />
<text  x="593.27" y="127.5" ></text>
</g>
<g >
<title>alloc_words (52 samples, 0.14%)</title><rect x="448.2" y="85" width="1.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="451.19" y="95.5" ></text>
</g>
<g >
<title>memcpy (90 samples, 0.25%)</title><rect x="778.2" y="101" width="3.0" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="781.25" y="111.5" ></text>
</g>
<g >
<title>alloc_size&lt;3&gt;_tag&lt;15&gt; (64 samples, 0.18%)</title><rect x="449.9" y="101" width="2.1" height="15.0" fill="rgb(240,128,39)" rx="2" ry="2" />
<text  x="452.89" y="111.5" ></text>
</g>
<g >
<title>alloc_size&lt;3&gt;_tag&lt;15&gt; (32 samples, 0.09%)</title><rect x="745.3" y="85" width="1.0" height="15.0" fill="rgb(240,128,39)" rx="2" ry="2" />
<text  x="748.26" y="95.5" ></text>
</g>
<g >
<title>@buffer_size&lt;u&gt; (14 samples, 0.04%)</title><rect x="725.9" y="101" width="0.5" height="15.0" fill="rgb(243,118,42)" rx="2" ry="2" />
<text  x="728.92" y="111.5" ></text>
</g>
<g >
<title>sleb128_decode (162 samples, 0.45%)</title><rect x="822.5" y="133" width="5.3" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="825.45" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (36 samples, 0.10%)</title><rect x="689.9" y="85" width="1.2" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="692.90" y="95.5" ></text>
</g>
<g >
<title>B_ge (10 samples, 0.03%)</title><rect x="537.2" y="69" width="0.4" height="15.0" fill="rgb(241,124,39)" rx="2" ry="2" />
<text  x="540.23" y="79.5" ></text>
</g>
<g >
<title>parse_idl_header (870 samples, 2.41%)</title><rect x="793.4" y="133" width="28.5" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="796.39" y="143.5" >pa..</text>
</g>
<g >
<title>memcpy (60 samples, 0.17%)</title><rect x="647.6" y="85" width="2.0" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="650.59" y="95.5" ></text>
</g>
<g >
<title>alloc_size&lt;6&gt;_tag&lt;5&gt; (32 samples, 0.09%)</title><rect x="751.9" y="85" width="1.0" height="15.0" fill="rgb(241,128,40)" rx="2" ry="2" />
<text  x="754.87" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_stack::push_mark_stack::h525e8b4745d2a093 (425 samples, 1.18%)</title><rect x="1137.0" y="101" width="13.9" height="15.0" fill="rgb(251,127,50)" rx="2" ry="2" />
<text  x="1139.96" y="111.5" ></text>
</g>
<g >
<title>B_eq (10 samples, 0.03%)</title><rect x="536.9" y="69" width="0.3" height="15.0" fill="rgb(239,130,38)" rx="2" ry="2" />
<text  x="539.90" y="79.5" ></text>
</g>
<g >
<title>@deserialize_go&lt;B&gt; (402 samples, 1.11%)</title><rect x="761.5" y="133" width="13.1" height="15.0" fill="rgb(251,176,51)" rx="2" ry="2" />
<text  x="764.46" y="143.5" ></text>
</g>
<g >
<title>@serialize&lt;B&gt; (333 samples, 0.92%)</title><rect x="643.1" y="117" width="10.9" height="15.0" fill="rgb(251,156,51)" rx="2" ry="2" />
<text  x="646.08" y="127.5" ></text>
</g>
<g >
<title>anon-func-165.17 (358 samples, 0.99%)</title><rect x="526.7" y="101" width="11.7" height="15.0" fill="rgb(233,164,31)" rx="2" ry="2" />
<text  x="529.72" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (72 samples, 0.20%)</title><rect x="1150.9" y="117" width="2.3" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="1153.87" y="127.5" ></text>
</g>
<g >
<title>@buffer_size&lt;vt&gt; (140 samples, 0.39%)</title><rect x="422.8" y="101" width="4.6" height="15.0" fill="rgb(237,118,36)" rx="2" ry="2" />
<text  x="425.83" y="111.5" ></text>
</g>
<g >
<title>trans_state6 (13 samples, 0.04%)</title><rect x="717.8" y="149" width="0.4" height="15.0" fill="rgb(240,158,38)" rx="2" ry="2" />
<text  x="720.78" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (36 samples, 0.10%)</title><rect x="389.0" y="101" width="1.2" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="392.00" y="111.5" ></text>
</g>
<g >
<title>memset (4 samples, 0.01%)</title><rect x="790.9" y="117" width="0.1" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="793.88" y="127.5" ></text>
</g>
<g >
<title>Array.idx (12 samples, 0.03%)</title><rect x="599.4" y="53" width="0.4" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="602.39" y="63.5" ></text>
</g>
<g >
<title>alloc_size&lt;4&gt;_tag&lt;5&gt; (32 samples, 0.09%)</title><rect x="750.3" y="85" width="1.0" height="15.0" fill="rgb(241,128,40)" rx="2" ry="2" />
<text  x="753.27" y="95.5" ></text>
</g>
<g >
<title>alloc_blob (38 samples, 0.11%)</title><rect x="715.5" y="149" width="1.2" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="718.49" y="159.5" ></text>
</g>
<g >
<title>alloc_words (52 samples, 0.14%)</title><rect x="600.2" y="85" width="1.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="603.18" y="95.5" ></text>
</g>
<g >
<title>alloc_words (26 samples, 0.07%)</title><rect x="750.5" y="69" width="0.8" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="753.47" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (36 samples, 0.10%)</title><rect x="733.1" y="117" width="1.2" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="736.09" y="127.5" ></text>
</g>
<g >
<title>memcpy (60 samples, 0.17%)</title><rect x="432.1" y="53" width="2.0" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="435.13" y="63.5" ></text>
</g>
<g >
<title>opt_inject (18 samples, 0.05%)</title><rect x="746.3" y="85" width="0.6" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="749.31" y="95.5" ></text>
</g>
<g >
<title>Blob.compare_eq (47 samples, 0.13%)</title><rect x="731.5" y="133" width="1.5" height="15.0" fill="rgb(239,126,38)" rx="2" ry="2" />
<text  x="734.49" y="143.5" ></text>
</g>
<g >
<title>to_4_tuple (49 samples, 0.14%)</title><rect x="751.3" y="101" width="1.6" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="754.32" y="111.5" ></text>
</g>
<g >
<title>alloc_words (78 samples, 0.22%)</title><rect x="309.3" y="101" width="2.6" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="312.33" y="111.5" ></text>
</g>
<g >
<title>alloc_words (52 samples, 0.14%)</title><rect x="518.0" y="85" width="1.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="521.02" y="95.5" ></text>
</g>
<g >
<title>opt_inject (36 samples, 0.10%)</title><rect x="456.2" y="101" width="1.2" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="459.18" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::text::text_compare_range::h9503d7821d2b0ac1 (237 samples, 0.66%)</title><rect x="659.0" y="53" width="7.8" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="662.04" y="63.5" ></text>
</g>
<g >
<title>leb128_decode (256 samples, 0.71%)</title><rect x="624.7" y="117" width="8.4" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="627.72" y="127.5" ></text>
</g>
<g >
<title>to_2_tuple (473 samples, 1.31%)</title><rect x="569.7" y="69" width="15.5" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="572.68" y="79.5" ></text>
</g>
<g >
<title>leb128_encode (24 samples, 0.07%)</title><rect x="434.3" y="85" width="0.8" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="437.32" y="95.5" ></text>
</g>
<g >
<title>idl_sub_buf_init (19 samples, 0.05%)</title><rect x="790.4" y="133" width="0.6" height="15.0" fill="rgb(236,184,34)" rx="2" ry="2" />
<text  x="793.38" y="143.5" ></text>
</g>
<g >
<title>alloc_words (78 samples, 0.22%)</title><rect x="559.5" y="53" width="2.5" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="562.48" y="63.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::h0d0130e4434da608 (888 samples, 2.46%)</title><rect x="241.8" y="117" width="29.1" height="15.0" fill="rgb(235,127,34)" rx="2" ry="2" />
<text  x="244.82" y="127.5" >mo..</text>
</g>
<g >
<title>B_gt (10 samples, 0.03%)</title><rect x="537.6" y="69" width="0.3" height="15.0" fill="rgb(232,124,30)" rx="2" ry="2" />
<text  x="540.55" y="79.5" ></text>
</g>
<g >
<title>text_of_ptr_size (119 samples, 0.33%)</title><rect x="687.2" y="117" width="3.9" height="15.0" fill="rgb(245,171,44)" rx="2" ry="2" />
<text  x="690.18" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::hfd4ff3b88fbfd4c0 (8,800 samples, 24.40%)</title><rect x="10.4" y="133" width="288.0" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="13.43" y="143.5" >motoko_rts::gc::mark_compact::compacti..</text>
</g>
<g >
<title>alloc_blob (76 samples, 0.21%)</title><rect x="726.5" y="101" width="2.5" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="729.51" y="111.5" ></text>
</g>
<g >
<title>alloc_words (26 samples, 0.07%)</title><rect x="716.9" y="133" width="0.9" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="719.93" y="143.5" ></text>
</g>
<g >
<title>alloc_size&lt;3&gt;_tag&lt;15&gt; (96 samples, 0.27%)</title><rect x="558.9" y="69" width="3.1" height="15.0" fill="rgb(240,128,39)" rx="2" ry="2" />
<text  x="561.89" y="79.5" ></text>
</g>
<g >
<title>text_size (4 samples, 0.01%)</title><rect x="427.1" y="69" width="0.1" height="15.0" fill="rgb(245,171,44)" rx="2" ry="2" />
<text  x="430.06" y="79.5" ></text>
</g>
<g >
<title>alloc_words (26 samples, 0.07%)</title><rect x="738.7" y="117" width="0.8" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="741.65" y="127.5" ></text>
</g>
<g >
<title>opt_project (162 samples, 0.45%)</title><rect x="564.4" y="69" width="5.3" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="567.38" y="79.5" ></text>
</g>
<g >
<title>next (1,284 samples, 3.56%)</title><rect x="543.1" y="85" width="42.1" height="15.0" fill="rgb(230,219,27)" rx="2" ry="2" />
<text  x="546.15" y="95.5" >next</text>
</g>
<g >
<title>map (184 samples, 0.51%)</title><rect x="460.2" y="133" width="6.0" height="15.0" fill="rgb(240,99,39)" rx="2" ry="2" />
<text  x="463.17" y="143.5" ></text>
</g>
<g >
<title>link_start (39 samples, 0.11%)</title><rect x="414.3" y="149" width="1.3" height="15.0" fill="rgb(239,129,37)" rx="2" ry="2" />
<text  x="417.29" y="159.5" ></text>
</g>
<g >
<title>leb128_decode (64 samples, 0.18%)</title><rect x="765.3" y="117" width="2.0" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="768.25" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (72 samples, 0.20%)</title><rect x="354.5" y="117" width="2.4" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="357.55" y="127.5" ></text>
</g>
<g >
<title>canister_init (11,688 samples, 32.41%)</title><rect x="10.0" y="165" width="382.4" height="15.0" fill="rgb(236,106,34)" rx="2" ry="2" />
<text  x="13.00" y="175.5" >canister_init</text>
</g>
<g >
<title>alloc_blob (76 samples, 0.21%)</title><rect x="649.6" y="101" width="2.4" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="652.56" y="111.5" ></text>
</g>
<g >
<title>store (14,406 samples, 39.95%)</title><rect x="718.6" y="165" width="471.4" height="15.0" fill="rgb(246,150,45)" rx="2" ry="2" />
<text  x="721.63" y="175.5" >store</text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (36 samples, 0.10%)</title><rect x="807.4" y="117" width="1.2" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="810.43" y="127.5" ></text>
</g>
<g >
<title>toArray (4,113 samples, 11.41%)</title><rect x="467.3" y="133" width="134.6" height="15.0" fill="rgb(239,160,37)" rx="2" ry="2" />
<text  x="470.30" y="143.5" >toArray</text>
</g>
<g >
<title>obj_idx&lt;0&gt; (17 samples, 0.05%)</title><rect x="676.1" y="133" width="0.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="679.06" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::text::alloc_text_blob::h4ab15865a564676e (49 samples, 0.14%)</title><rect x="689.5" y="101" width="1.6" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="692.47" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_object::h0d0130e4434da608 (1,188 samples, 3.29%)</title><rect x="1112.0" y="117" width="38.9" height="15.0" fill="rgb(235,127,34)" rx="2" ry="2" />
<text  x="1114.99" y="127.5" >mot..</text>
</g>
<g >
<title>memcpy (72 samples, 0.20%)</title><rect x="729.0" y="101" width="2.4" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="732.00" y="111.5" ></text>
</g>
<g >
<title>trans_state7 (13 samples, 0.04%)</title><rect x="718.2" y="149" width="0.4" height="15.0" fill="rgb(238,158,36)" rx="2" ry="2" />
<text  x="721.20" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::compacting_gc::hfd4ff3b88fbfd4c0 (10,956 samples, 30.38%)</title><rect x="830.3" y="133" width="358.5" height="15.0" fill="rgb(238,127,36)" rx="2" ry="2" />
<text  x="833.34" y="143.5" >motoko_rts::gc::mark_compact::compacting_gc::hfd..</text>
</g>
<g >
<title>alloc_words (52 samples, 0.14%)</title><rect x="450.3" y="85" width="1.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="453.29" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (36 samples, 0.10%)</title><rect x="715.6" y="133" width="1.1" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="718.55" y="143.5" ></text>
</g>
<g >
<title>list (6,864 samples, 19.03%)</title><rect x="415.6" y="165" width="224.6" height="15.0" fill="rgb(232,113,30)" rx="2" ry="2" />
<text  x="418.57" y="175.5" >list</text>
</g>
<g >
<title>trans_state4 (23 samples, 0.06%)</title><rect x="1188.8" y="149" width="0.8" height="15.0" fill="rgb(243,158,42)" rx="2" ry="2" />
<text  x="1191.82" y="159.5" ></text>
</g>
<g >
<title>@reset_refund (8 samples, 0.02%)</title><rect x="635.7" y="149" width="0.3" height="15.0" fill="rgb(248,161,48)" rx="2" ry="2" />
<text  x="638.71" y="159.5" ></text>
</g>
<g >
<title>alloc_size&lt;4&gt;_tag&lt;1&gt; (64 samples, 0.18%)</title><rect x="462.0" y="117" width="2.1" height="15.0" fill="rgb(246,128,45)" rx="2" ry="2" />
<text  x="465.00" y="127.5" ></text>
</g>
<g >
<title>retrieve (2,398 samples, 6.65%)</title><rect x="640.2" y="165" width="78.4" height="15.0" fill="rgb(240,162,39)" rx="2" ry="2" />
<text  x="643.16" y="175.5" >retrieve</text>
</g>
<g >
<title>@deserialize_go&lt;t&gt; (405 samples, 1.12%)</title><rect x="683.9" y="133" width="13.2" height="15.0" fill="rgb(244,176,43)" rx="2" ry="2" />
<text  x="686.88" y="143.5" ></text>
</g>
<g >
<title>text_to_buf (88 samples, 0.24%)</title><rect x="431.2" y="69" width="2.9" height="15.0" fill="rgb(242,171,41)" rx="2" ry="2" />
<text  x="434.21" y="79.5" ></text>
</g>
<g >
<title>set_local %i0 (6 samples, 0.02%)</title><rect x="821.9" y="133" width="0.2" height="15.0" fill="rgb(233,154,31)" rx="2" ry="2" />
<text  x="824.86" y="143.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (51 samples, 0.14%)</title><rect x="588.0" y="101" width="1.7" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="591.01" y="111.5" ></text>
</g>
<g >
<title>set_local %i2 (6 samples, 0.02%)</title><rect x="822.3" y="133" width="0.2" height="15.0" fill="rgb(247,154,46)" rx="2" ry="2" />
<text  x="825.25" y="143.5" ></text>
</g>
<g >
<title>alloc_size&lt;4&gt;_tag&lt;1&gt; (32 samples, 0.09%)</title><rect x="738.5" y="133" width="1.0" height="15.0" fill="rgb(246,128,45)" rx="2" ry="2" />
<text  x="741.46" y="143.5" ></text>
</g>
<g >
<title>__wasm_apply_global_relocs (16 samples, 0.04%)</title><rect x="414.4" y="133" width="0.5" height="15.0" fill="rgb(244,119,43)" rx="2" ry="2" />
<text  x="417.36" y="143.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (51 samples, 0.14%)</title><rect x="585.2" y="85" width="1.6" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="588.16" y="95.5" ></text>
</g>
<g >
<title>anon-func-116.7 (30 samples, 0.08%)</title><rect x="598.8" y="85" width="1.0" height="15.0" fill="rgb(239,164,38)" rx="2" ry="2" />
<text  x="601.81" y="95.5" ></text>
</g>
<g >
<title>$lambda (995 samples, 2.76%)</title><rect x="720.4" y="149" width="32.5" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="723.36" y="159.5" >$l..</text>
</g>
<g >
<title>trans_state5 (13 samples, 0.04%)</title><rect x="1189.6" y="149" width="0.4" height="15.0" fill="rgb(241,158,40)" rx="2" ry="2" />
<text  x="1192.57" y="159.5" ></text>
</g>
<g >
<title>leb128_decode (64 samples, 0.18%)</title><rect x="685.1" y="117" width="2.1" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="688.09" y="127.5" ></text>
</g>
<g >
<title>alloc_blob (38 samples, 0.11%)</title><rect x="828.0" y="149" width="1.3" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="831.01" y="159.5" ></text>
</g>
<g >
<title>$lambda (5,650 samples, 15.67%)</title><rect x="417.0" y="149" width="184.9" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="420.01" y="159.5" >$lambda</text>
</g>
<g >
<title>idl_sub_buf_words (18 samples, 0.05%)</title><rect x="612.9" y="133" width="0.6" height="15.0" fill="rgb(241,184,39)" rx="2" ry="2" />
<text  x="615.94" y="143.5" ></text>
</g>
<g >
<title>alloc_size&lt;2&gt;_tag&lt;9&gt; (32 samples, 0.09%)</title><rect x="307.7" y="117" width="1.0" height="15.0" fill="rgb(249,128,48)" rx="2" ry="2" />
<text  x="310.69" y="127.5" ></text>
</g>
<g >
<title>leb128_decode (128 samples, 0.35%)</title><rect x="704.3" y="117" width="4.2" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="707.26" y="127.5" ></text>
</g>
<g >
<title>@reset_cycles (8 samples, 0.02%)</title><rect x="635.5" y="149" width="0.2" height="15.0" fill="rgb(244,161,43)" rx="2" ry="2" />
<text  x="638.45" y="159.5" ></text>
</g>
<g >
<title>@serialize_go&lt;vt&gt; (235 samples, 0.65%)</title><rect x="427.4" y="101" width="7.7" height="15.0" fill="rgb(237,156,36)" rx="2" ry="2" />
<text  x="430.42" y="111.5" ></text>
</g>
<g >
<title>alloc_blob (38 samples, 0.11%)</title><rect x="317.1" y="133" width="1.3" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="320.11" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (36 samples, 0.10%)</title><rect x="828.1" y="133" width="1.2" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="831.08" y="143.5" ></text>
</g>
<g >
<title>alloc_size&lt;11&gt;_tag&lt;1&gt; (32 samples, 0.09%)</title><rect x="306.6" y="117" width="1.1" height="15.0" fill="rgb(246,128,45)" rx="2" ry="2" />
<text  x="309.64" y="127.5" ></text>
</g>
<g >
<title>alloc_words (52 samples, 0.14%)</title><rect x="486.6" y="85" width="1.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="489.61" y="95.5" ></text>
</g>
<g >
<title>alloc_words (26 samples, 0.07%)</title><rect x="749.1" y="53" width="0.8" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="752.06" y="63.5" ></text>
</g>
<g >
<title>text_of_ptr_size (149 samples, 0.41%)</title><rect x="777.9" y="117" width="4.9" height="15.0" fill="rgb(245,171,44)" rx="2" ry="2" />
<text  x="780.92" y="127.5" ></text>
</g>
<g >
<title>Array.idx (12 samples, 0.03%)</title><rect x="530.0" y="53" width="0.4" height="15.0" fill="rgb(247,150,46)" rx="2" ry="2" />
<text  x="533.03" y="63.5" ></text>
</g>
<g >
<title>@serialize_go&lt;u&gt; (4 samples, 0.01%)</title><rect x="726.4" y="101" width="0.1" height="15.0" fill="rgb(243,156,42)" rx="2" ry="2" />
<text  x="729.38" y="111.5" ></text>
</g>
<g >
<title>@reset_cycles (4 samples, 0.01%)</title><rect x="827.8" y="149" width="0.1" height="15.0" fill="rgb(244,161,43)" rx="2" ry="2" />
<text  x="830.75" y="159.5" ></text>
</g>
<g >
<title>alloc_size&lt;2&gt;_tag&lt;9&gt; (128 samples, 0.35%)</title><rect x="734.3" y="133" width="4.2" height="15.0" fill="rgb(249,128,48)" rx="2" ry="2" />
<text  x="737.27" y="143.5" ></text>
</g>
<g >
<title>anon-func-31.67 (12 samples, 0.03%)</title><rect x="542.8" y="85" width="0.3" height="15.0" fill="rgb(228,164,25)" rx="2" ry="2" />
<text  x="545.76" y="95.5" ></text>
</g>
<g >
<title>alloc_words (52 samples, 0.14%)</title><rect x="520.1" y="101" width="1.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="523.11" y="111.5" ></text>
</g>
<g >
<title>opt_project (18 samples, 0.05%)</title><rect x="676.6" y="133" width="0.6" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="679.62" y="143.5" ></text>
</g>
<g >
<title>RBTree (486 samples, 1.35%)</title><rect x="301.2" y="133" width="15.9" height="15.0" fill="rgb(246,213,46)" rx="2" ry="2" />
<text  x="304.21" y="143.5" ></text>
</g>
<g >
<title>Array.idx_bigint (23 samples, 0.06%)</title><rect x="529.7" y="69" width="0.7" height="15.0" fill="rgb(238,150,36)" rx="2" ry="2" />
<text  x="532.67" y="79.5" ></text>
</g>
<g >
<title>alloc_words (52 samples, 0.14%)</title><rect x="464.5" y="101" width="1.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="467.49" y="111.5" ></text>
</g>
<g >
<title>alloc_size&lt;4&gt;_tag&lt;5&gt; (352 samples, 0.98%)</title><rect x="573.6" y="53" width="11.6" height="15.0" fill="rgb(241,128,40)" rx="2" ry="2" />
<text  x="576.64" y="63.5" ></text>
</g>
<g >
<title>core::str::converts::from_utf8::h4500db47ae834319 (162 samples, 0.45%)</title><rect x="691.8" y="101" width="5.3" height="15.0" fill="rgb(235,133,33)" rx="2" ry="2" />
<text  x="694.83" y="111.5" ></text>
</g>
<g >
<title>memset (104 samples, 0.29%)</title><rect x="220.4" y="117" width="3.4" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="223.43" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (72 samples, 0.20%)</title><rect x="270.9" y="117" width="2.3" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="273.88" y="127.5" ></text>
</g>
<g >
<title>alloc_words (26 samples, 0.07%)</title><rect x="745.5" y="69" width="0.8" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="748.46" y="79.5" ></text>
</g>
<g >
<title>text_compare (278 samples, 0.77%)</title><rect x="657.7" y="69" width="9.1" height="15.0" fill="rgb(248,171,47)" rx="2" ry="2" />
<text  x="660.70" y="79.5" ></text>
</g>
<g >
<title>Buffer (1,546 samples, 4.29%)</title><rect x="469.1" y="117" width="50.6" height="15.0" fill="rgb(241,127,40)" rx="2" ry="2" />
<text  x="472.13" y="127.5" >Buffer</text>
</g>
<g >
<title>trans_state6 (26 samples, 0.07%)</title><rect x="638.5" y="149" width="0.8" height="15.0" fill="rgb(240,158,38)" rx="2" ry="2" />
<text  x="641.46" y="159.5" ></text>
</g>
<g >
<title>alloc_size&lt;5&gt;_tag&lt;11&gt; (64 samples, 0.18%)</title><rect x="464.1" y="117" width="2.1" height="15.0" fill="rgb(245,128,44)" rx="2" ry="2" />
<text  x="467.10" y="127.5" ></text>
</g>
<g >
<title>opt_inject (18 samples, 0.05%)</title><rect x="390.7" y="133" width="0.6" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="393.74" y="143.5" ></text>
</g>
<g >
<title>opt_project (18 samples, 0.05%)</title><rect x="587.4" y="85" width="0.6" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="590.42" y="95.5" ></text>
</g>
<g >
<title>alloc_blob (152 samples, 0.42%)</title><rect x="435.1" y="101" width="5.0" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="438.10" y="111.5" ></text>
</g>
<g >
<title>alloc_words (26 samples, 0.07%)</title><rect x="318.6" y="117" width="0.8" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="321.55" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (36 samples, 0.10%)</title><rect x="317.2" y="117" width="1.2" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="320.18" y="127.5" ></text>
</g>
<g >
<title>@serialize&lt;&gt; (229 samples, 0.63%)</title><rect x="723.9" y="117" width="7.5" height="15.0" fill="rgb(242,156,41)" rx="2" ry="2" />
<text  x="726.86" y="127.5" ></text>
</g>
<g >
<title>@buffer_size&lt;B&gt; (33 samples, 0.09%)</title><rect x="645.1" y="101" width="1.1" height="15.0" fill="rgb(251,118,51)" rx="2" ry="2" />
<text  x="648.14" y="111.5" ></text>
</g>
<g >
<title>memcpy (60 samples, 0.17%)</title><rect x="767.3" y="117" width="2.0" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="770.35" y="127.5" ></text>
</g>
<g >
<title>reply_with_data (4 samples, 0.01%)</title><rect x="654.0" y="117" width="0.1" height="15.0" fill="rgb(235,175,33)" rx="2" ry="2" />
<text  x="656.97" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::gc::mark_compact::mark_stack::push_mark_stack::h525e8b4745d2a093 (300 samples, 0.83%)</title><rect x="261.1" y="101" width="9.8" height="15.0" fill="rgb(251,127,50)" rx="2" ry="2" />
<text  x="264.06" y="111.5" ></text>
</g>
<g >
<title>alloc_size&lt;5&gt;_tag&lt;11&gt; (32 samples, 0.09%)</title><rect x="829.3" y="149" width="1.0" height="15.0" fill="rgb(245,128,44)" rx="2" ry="2" />
<text  x="832.26" y="159.5" ></text>
</g>
<g >
<title>@serialize_go&lt;B&gt; (102 samples, 0.28%)</title><rect x="646.2" y="101" width="3.4" height="15.0" fill="rgb(251,156,51)" rx="2" ry="2" />
<text  x="649.22" y="111.5" ></text>
</g>
<g >
<title>$lambda (342 samples, 0.95%)</title><rect x="642.9" y="133" width="11.2" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="645.91" y="143.5" ></text>
</g>
<g >
<title>alloc_blob (38 samples, 0.11%)</title><rect x="733.0" y="133" width="1.3" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="736.03" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::principal_id::enc_stash::hb3d1bc6c0c40a4a1 (372 samples, 1.03%)</title><rect x="375.8" y="101" width="12.2" height="15.0" fill="rgb(226,127,23)" rx="2" ry="2" />
<text  x="378.78" y="111.5" ></text>
</g>
<g >
<title>$lambda (1,095 samples, 3.04%)</title><rect x="641.4" y="149" width="35.8" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="644.38" y="159.5" >$la..</text>
</g>
<g >
<title>alloc_words (104 samples, 0.29%)</title><rect x="491.2" y="85" width="3.4" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="494.19" y="95.5" ></text>
</g>
<g >
<title>leb128_encode (12 samples, 0.03%)</title><rect x="647.2" y="85" width="0.4" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="650.20" y="95.5" ></text>
</g>
<g >
<title>memcpy (378 samples, 1.05%)</title><rect x="1072.2" y="117" width="12.3" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="1075.17" y="127.5" ></text>
</g>
<g >
<title>insertRoot (355 samples, 0.98%)</title><rect x="741.3" y="117" width="11.6" height="15.0" fill="rgb(241,167,39)" rx="2" ry="2" />
<text  x="744.30" y="127.5" ></text>
</g>
<g >
<title>reply_with_data (8 samples, 0.02%)</title><rect x="443.9" y="117" width="0.3" height="15.0" fill="rgb(235,175,33)" rx="2" ry="2" />
<text  x="446.94" y="127.5" ></text>
</g>
<g >
<title>B_add (25 samples, 0.07%)</title><rect x="525.9" y="101" width="0.8" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="528.90" y="111.5" ></text>
</g>
<g >
<title>memset (104 samples, 0.29%)</title><rect x="1084.5" y="117" width="3.4" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="1087.54" y="127.5" ></text>
</g>
<g >
<title>@deserialize_go&lt;t&gt; (482 samples, 1.34%)</title><rect x="774.6" y="133" width="15.8" height="15.0" fill="rgb(244,176,43)" rx="2" ry="2" />
<text  x="777.61" y="143.5" ></text>
</g>
<g >
<title>alloc_words (52 samples, 0.14%)</title><rect x="452.4" y="85" width="1.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="455.38" y="95.5" ></text>
</g>
<g >
<title>Text.compare_lt (283 samples, 0.78%)</title><rect x="666.8" y="85" width="9.3" height="15.0" fill="rgb(226,187,24)" rx="2" ry="2" />
<text  x="669.80" y="95.5" ></text>
</g>
<g >
<title>alloc_size&lt;5&gt;_tag&lt;11&gt; (64 samples, 0.18%)</title><rect x="454.1" y="101" width="2.1" height="15.0" fill="rgb(245,128,44)" rx="2" ry="2" />
<text  x="457.08" y="111.5" ></text>
</g>
<g >
<title>blob_of_principal (2,083 samples, 5.78%)</title><rect x="320.5" y="133" width="68.1" height="15.0" fill="rgb(228,110,25)" rx="2" ry="2" />
<text  x="323.45" y="143.5" >blob_of..</text>
</g>
<g >
<title>alloc_size&lt;3&gt;_tag&lt;1&gt; (32 samples, 0.09%)</title><rect x="318.4" y="133" width="1.0" height="15.0" fill="rgb(246,128,45)" rx="2" ry="2" />
<text  x="321.36" y="143.5" ></text>
</g>
<g >
<title>@reset_refund (4 samples, 0.01%)</title><rect x="827.9" y="149" width="0.1" height="15.0" fill="rgb(248,161,48)" rx="2" ry="2" />
<text  x="830.88" y="159.5" ></text>
</g>
<g >
<title>parse_idl_header (371 samples, 1.03%)</title><rect x="700.1" y="133" width="12.2" height="15.0" fill="rgb(243,149,41)" rx="2" ry="2" />
<text  x="703.14" y="143.5" ></text>
</g>
<g >
<title>link_start (707 samples, 1.96%)</title><rect x="392.4" y="165" width="23.2" height="15.0" fill="rgb(239,129,37)" rx="2" ry="2" />
<text  x="395.44" y="175.5" >l..</text>
</g>
<g >
<title>@reset_refund (4 samples, 0.01%)</title><rect x="715.4" y="149" width="0.1" height="15.0" fill="rgb(248,161,48)" rx="2" ry="2" />
<text  x="718.36" y="159.5" ></text>
</g>
<g >
<title>put (376 samples, 1.04%)</title><rect x="740.6" y="133" width="12.3" height="15.0" fill="rgb(234,152,31)" rx="2" ry="2" />
<text  x="743.62" y="143.5" ></text>
</g>
<g >
<title>trans_state4 (23 samples, 0.06%)</title><rect x="391.7" y="149" width="0.7" height="15.0" fill="rgb(243,158,42)" rx="2" ry="2" />
<text  x="394.68" y="159.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (36 samples, 0.10%)</title><rect x="781.6" y="85" width="1.2" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="784.62" y="95.5" ></text>
</g>
<g >
<title>iterate (2,092 samples, 5.80%)</title><rect x="521.8" y="117" width="68.5" height="15.0" fill="rgb(245,143,45)" rx="2" ry="2" />
<text  x="524.81" y="127.5" >iterate</text>
</g>
<g >
<title>alloc_words (26 samples, 0.07%)</title><rect x="829.5" y="133" width="0.8" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="832.45" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (72 samples, 0.20%)</title><rect x="373.4" y="101" width="2.4" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="376.43" y="111.5" ></text>
</g>
<g >
<title>rts_start (21 samples, 0.06%)</title><rect x="414.9" y="133" width="0.7" height="15.0" fill="rgb(239,145,37)" rx="2" ry="2" />
<text  x="417.88" y="143.5" ></text>
</g>
<g >
<title>alloc_words (208 samples, 0.58%)</title><rect x="496.2" y="85" width="6.8" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="499.16" y="95.5" ></text>
</g>
<g >
<title>alloc_words (26 samples, 0.07%)</title><rect x="307.9" y="101" width="0.8" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="310.89" y="111.5" ></text>
</g>
<g >
<title>alloc_words (286 samples, 0.79%)</title><rect x="575.8" y="37" width="9.4" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="578.80" y="47.5" ></text>
</g>
<g >
<title>leb128_decode (64 samples, 0.18%)</title><rect x="775.8" y="117" width="2.1" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="778.82" y="127.5" ></text>
</g>
<g >
<title>Text.compare_eq (282 samples, 0.78%)</title><rect x="657.6" y="85" width="9.2" height="15.0" fill="rgb(239,187,38)" rx="2" ry="2" />
<text  x="660.57" y="95.5" ></text>
</g>
<g >
<title>trans_state7 (26 samples, 0.07%)</title><rect x="639.3" y="149" width="0.9" height="15.0" fill="rgb(238,158,36)" rx="2" ry="2" />
<text  x="642.31" y="159.5" ></text>
</g>
<g >
<title>alloc_words (26 samples, 0.07%)</title><rect x="752.1" y="69" width="0.8" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="755.07" y="79.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (72 samples, 0.20%)</title><rect x="633.1" y="117" width="2.4" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="636.10" y="127.5" ></text>
</g>
<g >
<title>$lambda (789 samples, 2.19%)</title><rect x="418.4" y="133" width="25.8" height="15.0" fill="rgb(240,133,38)" rx="2" ry="2" />
<text  x="421.38" y="143.5" >$..</text>
</g>
<g >
<title>obj_idx&lt;0&gt; (17 samples, 0.05%)</title><rect x="739.5" y="133" width="0.6" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="742.50" y="143.5" ></text>
</g>
<g >
<title>@buffer_size&lt;t&gt; (37 samples, 0.10%)</title><rect x="426.0" y="85" width="1.2" height="15.0" fill="rgb(244,118,43)" rx="2" ry="2" />
<text  x="428.98" y="95.5" ></text>
</g>
<g >
<title>memset (8 samples, 0.02%)</title><rect x="612.7" y="117" width="0.2" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="615.68" y="127.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (72 samples, 0.20%)</title><rect x="636.1" y="133" width="2.4" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="639.11" y="143.5" ></text>
</g>
<g >
<title>memcpy (118 samples, 0.33%)</title><rect x="440.1" y="101" width="3.8" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="443.08" y="111.5" ></text>
</g>
<g >
<title>memcpy (978 samples, 2.71%)</title><rect x="188.4" y="117" width="32.0" height="15.0" fill="rgb(248,144,48)" rx="2" ry="2" />
<text  x="191.42" y="127.5" >me..</text>
</g>
<g >
<title>leb128_decode (64 samples, 0.18%)</title><rect x="791.3" y="133" width="2.1" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="794.30" y="143.5" ></text>
</g>
<g >
<title>motoko_rts::types::block_size::h3f6b24f4d5b088b5 (1,088 samples, 3.02%)</title><rect x="1153.2" y="117" width="35.6" height="15.0" fill="rgb(233,127,31)" rx="2" ry="2" />
<text  x="1156.22" y="127.5" >mot..</text>
</g>
<g >
<title>Array_tabulate (213 samples, 0.59%)</title><rect x="592.8" y="101" width="7.0" height="15.0" fill="rgb(245,150,45)" rx="2" ry="2" />
<text  x="595.82" y="111.5" ></text>
</g>
<g >
<title>alloc_size&lt;4&gt;_tag&lt;1&gt; (32 samples, 0.09%)</title><rect x="319.4" y="133" width="1.1" height="15.0" fill="rgb(246,128,45)" rx="2" ry="2" />
<text  x="322.41" y="143.5" ></text>
</g>
<g >
<title>utf8_validate (185 samples, 0.51%)</title><rect x="691.1" y="117" width="6.0" height="15.0" fill="rgb(245,124,45)" rx="2" ry="2" />
<text  x="694.08" y="127.5" ></text>
</g>
<g >
<title>@reset_cycles (4 samples, 0.01%)</title><rect x="715.2" y="149" width="0.2" height="15.0" fill="rgb(244,161,43)" rx="2" ry="2" />
<text  x="718.23" y="159.5" ></text>
</g>
<g >
<title>add (330 samples, 0.92%)</title><rect x="527.1" y="85" width="10.8" height="15.0" fill="rgb(253,156,53)" rx="2" ry="2" />
<text  x="530.08" y="95.5" ></text>
</g>
<g >
<title>to_2_tuple (43 samples, 0.12%)</title><rect x="746.9" y="85" width="1.4" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="749.90" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::text::alloc_text_blob::h4ab15865a564676e (49 samples, 0.14%)</title><rect x="781.2" y="101" width="1.6" height="15.0" fill="rgb(237,127,35)" rx="2" ry="2" />
<text  x="784.19" y="111.5" ></text>
</g>
<g >
<title>text_size (4 samples, 0.01%)</title><rect x="431.1" y="69" width="0.1" height="15.0" fill="rgb(245,171,44)" rx="2" ry="2" />
<text  x="434.08" y="79.5" ></text>
</g>
<g >
<title>B_add (25 samples, 0.07%)</title><rect x="536.1" y="69" width="0.8" height="15.0" fill="rgb(253,143,53)" rx="2" ry="2" />
<text  x="539.08" y="79.5" ></text>
</g>
<g >
<title>memset (4 samples, 0.01%)</title><rect x="697.6" y="117" width="0.2" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="700.62" y="127.5" ></text>
</g>
<g >
<title>sleb128_decode (405 samples, 1.12%)</title><rect x="808.6" y="117" width="13.3" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="811.61" y="127.5" ></text>
</g>
<g >
<title>trans_state3 (11 samples, 0.03%)</title><rect x="391.3" y="149" width="0.4" height="15.0" fill="rgb(245,158,44)" rx="2" ry="2" />
<text  x="394.32" y="159.5" ></text>
</g>
<g >
<title>reply_with_data (4 samples, 0.01%)</title><rect x="731.4" y="117" width="0.1" height="15.0" fill="rgb(235,175,33)" rx="2" ry="2" />
<text  x="734.36" y="127.5" ></text>
</g>
<g >
<title>alloc_size&lt;5&gt;_tag&lt;11&gt; (448 samples, 1.24%)</title><rect x="503.0" y="101" width="14.6" height="15.0" fill="rgb(245,128,44)" rx="2" ry="2" />
<text  x="505.97" y="111.5" ></text>
</g>
<g >
<title>alloc_size&lt;2&gt;_tag&lt;9&gt; (64 samples, 0.18%)</title><rect x="447.8" y="101" width="2.1" height="15.0" fill="rgb(249,128,48)" rx="2" ry="2" />
<text  x="450.80" y="111.5" ></text>
</g>
<g >
<title>memcmp (95 samples, 0.26%)</title><rect x="672.0" y="37" width="3.1" height="15.0" fill="rgb(238,144,36)" rx="2" ry="2" />
<text  x="675.03" y="47.5" ></text>
</g>
<g >
<title>alloc_array (47 samples, 0.13%)</title><rect x="534.5" y="53" width="1.6" height="15.0" fill="rgb(239,128,37)" rx="2" ry="2" />
<text  x="537.54" y="63.5" ></text>
</g>
<g >
<title>opt_inject (18 samples, 0.05%)</title><rect x="586.8" y="85" width="0.6" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="589.83" y="95.5" ></text>
</g>
<g >
<title>alloc_size&lt;5&gt;_tag&lt;11&gt; (160 samples, 0.44%)</title><rect x="311.9" y="117" width="5.2" height="15.0" fill="rgb(245,128,44)" rx="2" ry="2" />
<text  x="314.88" y="127.5" ></text>
</g>
<g >
<title>opt_project (18 samples, 0.05%)</title><rect x="589.7" y="101" width="0.6" height="15.0" fill="rgb(241,186,39)" rx="2" ry="2" />
<text  x="592.68" y="111.5" ></text>
</g>
<g >
<title>alloc_blob (38 samples, 0.11%)</title><rect x="764.0" y="117" width="1.3" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="767.01" y="127.5" ></text>
</g>
<g >
<title>alloc_words (364 samples, 1.01%)</title><rect x="505.7" y="85" width="11.9" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="508.72" y="95.5" ></text>
</g>
<g >
<title>alloc_words (52 samples, 0.14%)</title><rect x="454.5" y="85" width="1.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="457.48" y="95.5" ></text>
</g>
<g >
<title>alloc_words (26 samples, 0.07%)</title><rect x="306.8" y="101" width="0.9" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="309.84" y="111.5" ></text>
</g>
<g >
<title>alloc_words (26 samples, 0.07%)</title><rect x="319.6" y="117" width="0.9" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="322.60" y="127.5" ></text>
</g>
<g >
<title>alloc_size&lt;6&gt;_tag&lt;5&gt; (32 samples, 0.09%)</title><rect x="748.9" y="69" width="1.0" height="15.0" fill="rgb(241,128,40)" rx="2" ry="2" />
<text  x="751.86" y="79.5" ></text>
</g>
<g >
<title>alloc_size&lt;4&gt;_tag&lt;1&gt; (64 samples, 0.18%)</title><rect x="452.0" y="101" width="2.1" height="15.0" fill="rgb(246,128,45)" rx="2" ry="2" />
<text  x="454.99" y="111.5" ></text>
</g>
<g >
<title>alloc_size&lt;2&gt;_tag&lt;5&gt; (64 samples, 0.18%)</title><rect x="488.3" y="101" width="2.1" height="15.0" fill="rgb(241,128,40)" rx="2" ry="2" />
<text  x="491.31" y="111.5" ></text>
</g>
<g >
<title>motoko_rts::text::text_get_range::he41d097cc447bc41 (28 samples, 0.08%)</title><rect x="665.9" y="37" width="0.9" height="15.0" fill="rgb(228,127,25)" rx="2" ry="2" />
<text  x="668.88" y="47.5" ></text>
</g>
<g >
<title>can_tag_i64 (8 samples, 0.02%)</title><rect x="536.6" y="53" width="0.3" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="539.64" y="63.5" ></text>
</g>
<g >
<title>__wasm_apply_data_relocs (665 samples, 1.84%)</title><rect x="392.5" y="133" width="21.8" height="15.0" fill="rgb(244,119,43)" rx="2" ry="2" />
<text  x="395.54" y="143.5" >_..</text>
</g>
<g >
<title>__wasm_call_ctors (666 samples, 1.85%)</title><rect x="392.5" y="149" width="21.8" height="15.0" fill="rgb(239,119,38)" rx="2" ry="2" />
<text  x="395.50" y="159.5" >_..</text>
</g>
<g >
<title>alloc_size&lt;4&gt;_tag&lt;5&gt; (32 samples, 0.09%)</title><rect x="747.3" y="69" width="1.0" height="15.0" fill="rgb(241,128,40)" rx="2" ry="2" />
<text  x="750.26" y="79.5" ></text>
</g>
<g >
<title>alloc_words (52 samples, 0.14%)</title><rect x="458.5" y="69" width="1.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="461.47" y="79.5" ></text>
</g>
<g >
<title>alloc_array (94 samples, 0.26%)</title><rect x="595.7" y="85" width="3.1" height="15.0" fill="rgb(239,128,37)" rx="2" ry="2" />
<text  x="598.73" y="95.5" ></text>
</g>
<g >
<title>motoko_rts::memory::alloc_blob::hb687495ba1596def (36 samples, 0.10%)</title><rect x="708.5" y="117" width="1.1" height="15.0" fill="rgb(246,127,45)" rx="2" ry="2" />
<text  x="711.45" y="127.5" ></text>
</g>
<g >
<title>idl_sub_buf_words (9 samples, 0.02%)</title><rect x="791.0" y="133" width="0.3" height="15.0" fill="rgb(241,184,39)" rx="2" ry="2" />
<text  x="794.01" y="143.5" ></text>
</g>
<g >
<title>@deserialize&lt;t&gt; (1,162 samples, 3.22%)</title><rect x="677.2" y="149" width="38.0" height="15.0" fill="rgb(244,176,43)" rx="2" ry="2" />
<text  x="680.20" y="159.5" >@de..</text>
</g>
<g >
<title>to_2_tuple (43 samples, 0.12%)</title><rect x="749.9" y="101" width="1.4" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="752.91" y="111.5" ></text>
</g>
<g >
<title>leb128_decode (128 samples, 0.35%)</title><rect x="803.2" y="117" width="4.2" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="806.24" y="127.5" ></text>
</g>
<g >
<title>obj_idx&lt;0&gt; (17 samples, 0.05%)</title><rect x="390.2" y="133" width="0.5" height="15.0" fill="rgb(247,139,46)" rx="2" ry="2" />
<text  x="393.18" y="143.5" ></text>
</g>
<g >
<title>alloc_blob (38 samples, 0.11%)</title><rect x="388.9" y="117" width="1.3" height="15.0" fill="rgb(239,128,38)" rx="2" ry="2" />
<text  x="391.94" y="127.5" ></text>
</g>
<g >
<title>leb128_decode (64 samples, 0.18%)</title><rect x="698.0" y="133" width="2.1" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="701.05" y="143.5" ></text>
</g>
<g >
<title>toArray (321 samples, 0.89%)</title><rect x="591.4" y="117" width="10.5" height="15.0" fill="rgb(239,160,37)" rx="2" ry="2" />
<text  x="594.38" y="127.5" ></text>
</g>
<g >
<title>alloc_words (104 samples, 0.29%)</title><rect x="735.1" y="117" width="3.4" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="738.05" y="127.5" ></text>
</g>
<g >
<title>text_compare (278 samples, 0.77%)</title><rect x="667.0" y="69" width="9.1" height="15.0" fill="rgb(248,171,47)" rx="2" ry="2" />
<text  x="669.96" y="79.5" ></text>
</g>
<g >
<title>to_2_tuple (86 samples, 0.24%)</title><rect x="457.4" y="101" width="2.8" height="15.0" fill="rgb(240,141,39)" rx="2" ry="2" />
<text  x="460.35" y="111.5" ></text>
</g>
<g >
<title>leb128_decode (128 samples, 0.35%)</title><rect x="613.5" y="133" width="4.2" height="15.0" fill="rgb(250,149,49)" rx="2" ry="2" />
<text  x="616.53" y="143.5" ></text>
</g>
<g >
<title>obj_idx&lt;6&gt; (34 samples, 0.09%)</title><rect x="466.2" y="133" width="1.1" height="15.0" fill="rgb(240,139,39)" rx="2" ry="2" />
<text  x="469.19" y="143.5" ></text>
</g>
<g >
<title>alloc_words (52 samples, 0.14%)</title><rect x="488.7" y="85" width="1.7" height="15.0" fill="rgb(241,128,39)" rx="2" ry="2" />
<text  x="491.70" y="95.5" ></text>
</g>
<g >
<title>sleb128_decode (81 samples, 0.22%)</title><rect x="712.6" y="133" width="2.6" height="15.0" fill="rgb(250,128,49)" rx="2" ry="2" />
<text  x="715.57" y="143.5" ></text>
</g>
<g >
<title>Array_init (173 samples, 0.48%)</title><rect x="530.4" y="69" width="5.7" height="15.0" fill="rgb(236,150,34)" rx="2" ry="2" />
<text  x="533.42" y="79.5" ></text>
</g>
</g>
</svg>
